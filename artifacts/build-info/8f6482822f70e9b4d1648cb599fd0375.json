{
  "id": "8f6482822f70e9b4d1648cb599fd0375",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.9",
  "solcLongVersion": "0.8.9+commit.e5eed63a",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/Jury.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"./interfaces/IJury.sol\";\n\n/**\n * @dev One jury per protocol\n */\ncontract Jury is IJury, Pausable {\n    uint256 constant minJurySize = 10;\n    uint256 constant increaseDeadlineAmount = 86400;\n\n    uint256 juryPointer;\n    uint256 disputeId;\n    uint256 disputeProposalId;\n\n    /** STORAGE **/\n    bool verdict;\n\n    /** DATA STRUCTURES **/\n    mapping(uint256 => Dispute) public disputes;\n    mapping(uint256 => DisputeProposal) public disputeProposals;\n\n    mapping(address => bool) public juryPoolMembers;\n    mapping(uint256 => JuryMember[]) public juries;\n    mapping(uint256 => bool) public juryIsLive;\n\n    /** MODIFIER **/\n    modifier onlyJuryMember() {\n        JuryMember[] memory liveJuryMembers = juries[juryPointer];\n        for (uint256 i = 0; i < liveJuryMembers.length; i++) {\n            require(\n                msg.sender == liveJuryMembers[i].memberAddr,\n                \"caller must be jury member\"\n            );\n        }\n        _;\n    }\n\n    modifier onlyJuryPoolMember() {\n        require(juryPoolMembers[msg.sender], \"caller must be jury pool member\");\n        _;\n    }\n\n    /*** CONSTRUCTOR ***/\n    constructor(address[] memory _initialJuryMembers) {\n        require(\n            _initialJuryMembers.length == minJurySize,\n            \"Jury.constructor: not enough jury members\"\n        );\n        for (uint256 i = 0; i < _initialJuryMembers.length; i++) {\n            juryPoolMembers[_initialJuryMembers[i]] = true;\n            emit NewJuryPoolMember(_initialJuryMembers[i]);\n        }\n        juryPointer += 1;\n        juryIsLive[juryPointer] = true;\n    }\n\n    /*** FUNCTIONS ***/\n    function newDisputeProposal(\n        address _plaintiff,\n        address _defendent,\n        uint256 _deadline\n    ) external {\n        JuryMember[] memory liveJuryMembers = juries[juryPointer];\n\n        for (uint256 i = 0; i < liveJuryMembers.length; i++) {\n            require(\n                liveJuryMembers[i].memberAddr != _plaintiff ||\n                    liveJuryMembers[i].memberAddr != _defendent,\n                \"Jury.newDispute: live jury member cannot be involved\"\n            );\n        }\n\n        disputeProposals[disputeProposalId] = DisputeProposal({\n            approvedJurors: new address[](0),\n            isApproved: false,\n            deadline: _deadline,\n            plaintiff: _plaintiff,\n            defendent: _defendent\n        });\n    }\n\n    function approveDisputeProposal(uint256 _disputeProposalId)\n        external\n        onlyJuryPoolMember\n    {\n        address[] memory currentApprovedJurors = disputeProposals[\n            _disputeProposalId\n        ].approvedJurors;\n\n        for (uint256 i = 0; i < currentApprovedJurors.length; i++) {\n            require(\n                currentApprovedJurors[i] != msg.sender,\n                \"Jury.approveDisputeProposal: jurror already approved\"\n            );\n        }\n\n        //set new current approved jurors\n        disputeProposals[_disputeProposalId].approvedJurors.push(msg.sender);\n        DisputeProposal memory disputeProposal = disputeProposals[\n            _disputeProposalId\n        ];\n        if (disputeProposals[_disputeProposalId].approvedJurors.length > 1) {\n            _newDispute(\n                disputeProposal.plaintiff,\n                disputeProposal.defendent,\n                disputeProposal.deadline\n            );\n        }\n    }\n\n    function newDisputeSubmission(uint256 _disputeProposalId)\n        external\n        onlyJuryPoolMember\n    {\n        require(\n            disputeProposals[_disputeProposalId].approvedJurors.length >= 2,\n            \"Jury.newDisputeSubmission: not enough approvals for dispute\"\n        );\n        address plaintiff = disputeProposals[_disputeProposalId].plaintiff;\n        address defendent = disputeProposals[_disputeProposalId].defendent;\n        uint256 deadline = disputeProposals[_disputeProposalId].deadline;\n        _newDispute(plaintiff, defendent, deadline);\n    }\n\n    function extendDisputeDeadline(uint256 _disputeId) external {\n        //require (half jurors to agree to extension)\n        uint256 newDeadline = disputes[_disputeId]\n            .deadline += increaseDeadlineAmount;\n        emit DisputeDeadlinePostponed(_disputeId, newDeadline);\n    }\n\n    function voteYes() external onlyJuryMember {}\n\n    function voteNo() external onlyJuryMember {}\n\n    function setJuryType() external {}\n\n    function addJuryPoolMember(address _newMember) external onlyJuryMember {\n        juryPoolMembers[_newMember] = true;\n        emit NewJuryPoolMember(_newMember);\n    }\n\n    /**\n     * @dev lock up jury members to specific jury id\n     */\n    function newLiveJury(address[] memory _juryMembers) external {\n        // require juryMember be from pooled members\n        juryPointer += 1;\n        juryIsLive[juryPointer] = true;\n        juryIsLive[juryPointer - 1] = false;\n        JuryMember[] memory juryMembers = juries[juryPointer];\n        for (uint256 i = 0; i < _juryMembers.length; i++) {\n            juryMembers[i].memberAddr = _juryMembers[i];\n            juryMembers[i].vote = false;\n        }\n        emit JuryDutyCompleted(juryPointer);\n    }\n\n    /*** HELPER FUNCTIONS ***/\n    function _newDispute(\n        address _plaintiff,\n        address _defendent,\n        uint256 _deadline\n    ) internal {\n        disputeId += 1;\n        disputes[disputeId] = Dispute({\n            juryId: juryPointer,\n            disputeId: disputeId,\n            deadline: _deadline,\n            plaintiff: _plaintiff,\n            defendent: _defendent,\n            verdict: false\n        });\n        emit NewDispute(disputeId, juryPointer);\n    }\n\n    function _setVerdict() internal {}\n\n    function _randomizeJuryMembers() internal {}\n}\n\n// add metadata about the dispute to ipfs\n"
      },
      "@openzeppelin/contracts/security/Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
      },
      "contracts/interfaces/IJury.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\ninterface IJury {\n    struct JuryMember {\n        address memberAddr;\n        uint256 jurysParticipated;\n        uint256 disputesApproved;\n        uint256 disputesResolved;\n        bool vote;\n    }\n\n    struct DisputeProposal {\n        address[] approvedJurors;\n        bool isApproved;\n        uint256 deadline;\n        address plaintiff;\n        address defendent;\n    }\n\n    struct Dispute {\n        uint256 juryId;\n        uint256 disputeId;\n        uint256 deadline;\n        address plaintiff;\n        address defendent;\n        bool verdict;\n    }\n\n    //Jury Events\n    event NewLiveJury(uint256 juryId, address[] indexed juryMemebers);\n    event NewJuryPoolMember(address juryMemeber);\n    event RemovedJuryMember(address juryMember);\n    event JuryDutyCompleted(uint256 indexed jurydId);\n\n    //Dispute Events\n    event NewDispute(uint256 juryId, uint256 disputeId);\n    event DisputeDeadlinePostponed(uint256 juryId, uint256 newDeadline);\n    event DisputeResolved(bool verdict, uint256 juryId);\n    event JuryMemberVoted(bool vote, address indexed juryMember);\n\n    /** MACRO (jury configuraiton) **/\n\n    /**\n     * @dev majority rules or unanimous decision\n     */\n    function setJuryType() external;\n\n    // function addJuryPoolMember() external;\n\n    // function removeJuryPoolMember() external;\n\n    /**\n     * @dev lock up jury members to specific jury id\n    //  */\n    // function newLiveJury() external;\n\n    // /** MICRO (ongoing dispute) **/\n    // function newDispute() external;\n\n    // function voteYes() external;\n\n    // function voteNo() external;\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "storageLayout"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "@openzeppelin/contracts/security/Pausable.sol": {
        "Pausable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "paused()": "5c975abb"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 17,
                "contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
                "label": "_paused",
                "offset": 0,
                "slot": "0",
                "type": "t_bool"
              }
            ],
            "types": {
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              }
            }
          }
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "contracts/Jury.sol": {
        "Jury": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "_initialJuryMembers",
                  "type": "address[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "juryId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newDeadline",
                  "type": "uint256"
                }
              ],
              "name": "DisputeDeadlinePostponed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "verdict",
                  "type": "bool"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "juryId",
                  "type": "uint256"
                }
              ],
              "name": "DisputeResolved",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "jurydId",
                  "type": "uint256"
                }
              ],
              "name": "JuryDutyCompleted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "vote",
                  "type": "bool"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "juryMember",
                  "type": "address"
                }
              ],
              "name": "JuryMemberVoted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "juryId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "disputeId",
                  "type": "uint256"
                }
              ],
              "name": "NewDispute",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "juryMemeber",
                  "type": "address"
                }
              ],
              "name": "NewJuryPoolMember",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "juryId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address[]",
                  "name": "juryMemebers",
                  "type": "address[]"
                }
              ],
              "name": "NewLiveJury",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "juryMember",
                  "type": "address"
                }
              ],
              "name": "RemovedJuryMember",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newMember",
                  "type": "address"
                }
              ],
              "name": "addJuryPoolMember",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeProposalId",
                  "type": "uint256"
                }
              ],
              "name": "approveDisputeProposal",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "disputeProposals",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isApproved",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "plaintiff",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "defendent",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "disputes",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "juryId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "disputeId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "plaintiff",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "defendent",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "verdict",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeId",
                  "type": "uint256"
                }
              ],
              "name": "extendDisputeDeadline",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "juries",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "memberAddr",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "jurysParticipated",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "disputesApproved",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "disputesResolved",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "vote",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "juryIsLive",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "juryPoolMembers",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_plaintiff",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_defendent",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_deadline",
                  "type": "uint256"
                }
              ],
              "name": "newDisputeProposal",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_disputeProposalId",
                  "type": "uint256"
                }
              ],
              "name": "newDisputeSubmission",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "_juryMembers",
                  "type": "address[]"
                }
              ],
              "name": "newLiveJury",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "setJuryType",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "voteNo",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "voteYes",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_26": {
                  "entryPoint": null,
                  "id": 26,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_280": {
                  "entryPoint": null,
                  "id": 280,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
                  "entryPoint": 798,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_decode_t_address_fromMemory": {
                  "entryPoint": 775,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
                  "entryPoint": 914,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
                  "entryPoint": 965,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_t_address_to_t_address_fromStack": {
                  "entryPoint": 1262,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_stringliteral_83d7abbe591ba3b7619b193a9d3c4a954631bc95633b05d00456924ed9c0ea35_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 1142,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": 1279,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_83d7abbe591ba3b7619b193a9d3c4a954631bc95633b05d00456924ed9c0ea35__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 1181,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 614,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": 471,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
                  "entryPoint": 645,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
                  "entryPoint": 1046,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 1443,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_t_address": {
                  "entryPoint": 729,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint160": {
                  "entryPoint": 697,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint256": {
                  "entryPoint": 1355,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 560,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "increment_t_uint256": {
                  "entryPoint": 1365,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 1308,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 1215,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 513,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
                  "entryPoint": 491,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
                  "entryPoint": 692,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": 486,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 481,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of_32": {
                  "entryPoint": 496,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "store_literal_in_memory_83d7abbe591ba3b7619b193a9d3c4a954631bc95633b05d00456924ed9c0ea35": {
                  "entryPoint": 1063,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_address": {
                  "entryPoint": 749,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:6407:4",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "47:35:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "57:19:4",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "73:2:4",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "67:5:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "67:9:4"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "57:6:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "allocate_unbounded",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "40:6:4",
                            "type": ""
                          }
                        ],
                        "src": "7:75:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "177:28:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "194:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "197:1:4",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "187:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "187:12:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "187:12:4"
                            }
                          ]
                        },
                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                        "nodeType": "YulFunctionDefinition",
                        "src": "88:117:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "300:28:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "317:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "320:1:4",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "310:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "310:12:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "310:12:4"
                            }
                          ]
                        },
                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                        "nodeType": "YulFunctionDefinition",
                        "src": "211:117:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "423:28:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "440:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "443:1:4",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "433:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "433:12:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "433:12:4"
                            }
                          ]
                        },
                        "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                        "nodeType": "YulFunctionDefinition",
                        "src": "334:117:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "505:54:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "515:38:4",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "533:5:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "540:2:4",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "529:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "529:14:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "549:2:4",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "545:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "545:7:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "525:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "525:28:4"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "515:6:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "round_up_to_mul_of_32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "488:5:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "498:6:4",
                            "type": ""
                          }
                        ],
                        "src": "457:102:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "593:152:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "610:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "613:77:4",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "603:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "603:88:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "603:88:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "707:1:4",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "710:4:4",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "700:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "700:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "700:15:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "731:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "734:4:4",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "724:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "724:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "724:15:4"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "565:180:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "794:238:4",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "804:58:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "826:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "size",
                                        "nodeType": "YulIdentifier",
                                        "src": "856:4:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "834:21:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "834:27:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "822:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "822:40:4"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "808:10:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "973:22:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "975:16:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "975:18:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "975:18:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "916:10:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "928:18:4",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "913:2:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "913:34:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "952:10:4"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "964:6:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "949:2:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "949:22:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "910:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "910:62:4"
                              },
                              "nodeType": "YulIf",
                              "src": "907:88:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1011:2:4",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1015:10:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1004:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1004:22:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1004:22:4"
                            }
                          ]
                        },
                        "name": "finalize_allocation",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "780:6:4",
                            "type": ""
                          },
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "788:4:4",
                            "type": ""
                          }
                        ],
                        "src": "751:281:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1079:88:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1089:30:4",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "allocate_unbounded",
                                  "nodeType": "YulIdentifier",
                                  "src": "1099:18:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1099:20:4"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1089:6:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1148:6:4"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "1156:4:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "finalize_allocation",
                                  "nodeType": "YulIdentifier",
                                  "src": "1128:19:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1128:33:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1128:33:4"
                            }
                          ]
                        },
                        "name": "allocate_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "1063:4:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "1072:6:4",
                            "type": ""
                          }
                        ],
                        "src": "1038:129:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1255:229:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1360:22:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "1362:16:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1362:18:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1362:18:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1332:6:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1340:18:4",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1329:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1329:30:4"
                              },
                              "nodeType": "YulIf",
                              "src": "1326:56:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1392:25:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1404:6:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1412:4:4",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "1400:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1400:17:4"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "1392:4:4"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1454:23:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "1466:4:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1472:4:4",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1462:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1462:15:4"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "1454:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "1239:6:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "1250:4:4",
                            "type": ""
                          }
                        ],
                        "src": "1173:311:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1579:28:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1596:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1599:1:4",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1589:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1589:12:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1589:12:4"
                            }
                          ]
                        },
                        "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1490:117:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1658:81:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1668:65:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1683:5:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1690:42:4",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1679:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1679:54:4"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "1668:7:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1640:5:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "1650:7:4",
                            "type": ""
                          }
                        ],
                        "src": "1613:126:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1790:51:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1800:35:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1829:5:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "1811:17:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1811:24:4"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "1800:7:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1772:5:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "1782:7:4",
                            "type": ""
                          }
                        ],
                        "src": "1745:96:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1890:79:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1947:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1956:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1959:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1949:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1949:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1949:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1913:5:4"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1938:5:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "1920:17:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1920:24:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1910:2:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1910:35:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1903:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1903:43:4"
                              },
                              "nodeType": "YulIf",
                              "src": "1900:63:4"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1883:5:4",
                            "type": ""
                          }
                        ],
                        "src": "1847:122:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2038:80:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2048:22:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2063:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2057:5:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2057:13:4"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2048:5:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2106:5:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2079:26:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2079:33:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2079:33:4"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "2016:6:4",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2024:3:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2032:5:4",
                            "type": ""
                          }
                        ],
                        "src": "1975:143:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2254:619:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2264:90:4",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "2346:6:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "2289:56:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2289:64:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "2273:15:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2273:81:4"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "2264:5:4"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2363:16:4",
                              "value": {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "2374:5:4"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "2367:3:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "2396:5:4"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2403:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2389:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2389:21:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2389:21:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2419:23:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "2430:5:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2437:4:4",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2426:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2426:16:4"
                              },
                              "variableNames": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2419:3:4"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2452:44:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2470:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "2482:6:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2490:4:4",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mul",
                                      "nodeType": "YulIdentifier",
                                      "src": "2478:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2478:17:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2466:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2466:30:4"
                              },
                              "variables": [
                                {
                                  "name": "srcEnd",
                                  "nodeType": "YulTypedName",
                                  "src": "2456:6:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2524:103:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
                                        "nodeType": "YulIdentifier",
                                        "src": "2538:77:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2538:79:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2538:79:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "srcEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2511:6:4"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "2519:3:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2508:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2508:15:4"
                              },
                              "nodeType": "YulIf",
                              "src": "2505:122:4"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2712:155:4",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2727:21:4",
                                    "value": {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "2745:3:4"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementPos",
                                        "nodeType": "YulTypedName",
                                        "src": "2731:10:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "2769:3:4"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "elementPos",
                                              "nodeType": "YulIdentifier",
                                              "src": "2806:10:4"
                                            },
                                            {
                                              "name": "end",
                                              "nodeType": "YulIdentifier",
                                              "src": "2818:3:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "abi_decode_t_address_fromMemory",
                                            "nodeType": "YulIdentifier",
                                            "src": "2774:31:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2774:48:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2762:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2762:61:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2762:61:4"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2836:21:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "2847:3:4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2852:4:4",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2843:3:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2843:14:4"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "2836:3:4"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "2665:3:4"
                                  },
                                  {
                                    "name": "srcEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2670:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2662:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2662:15:4"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "2678:25:4",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2680:21:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "2691:3:4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2696:4:4",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2687:3:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2687:14:4"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "2680:3:4"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "2640:21:4",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2642:17:4",
                                    "value": {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "2653:6:4"
                                    },
                                    "variables": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulTypedName",
                                        "src": "2646:3:4",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "2636:231:4"
                            }
                          ]
                        },
                        "name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "2224:6:4",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "2232:6:4",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2240:3:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "2248:5:4",
                            "type": ""
                          }
                        ],
                        "src": "2141:732:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2984:297:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3033:83:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                                        "nodeType": "YulIdentifier",
                                        "src": "3035:77:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3035:79:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3035:79:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3012:6:4"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3020:4:4",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3008:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3008:17:4"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "3027:3:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3004:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3004:27:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2997:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2997:35:4"
                              },
                              "nodeType": "YulIf",
                              "src": "2994:122:4"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3125:27:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "3145:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3139:5:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3139:13:4"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "3129:6:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3161:114:4",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "3248:6:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3256:4:4",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3244:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3244:17:4"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3263:6:4"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "3271:3:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "3170:73:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3170:105:4"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "3161:5:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "2962:6:4",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2970:3:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "2978:5:4",
                            "type": ""
                          }
                        ],
                        "src": "2896:385:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3389:452:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3435:83:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "3437:77:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3437:79:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3437:79:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3410:7:4"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3419:9:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3406:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3406:23:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3431:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3402:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3402:32:4"
                              },
                              "nodeType": "YulIf",
                              "src": "3399:119:4"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3528:306:4",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3543:38:4",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3567:9:4"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3578:1:4",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3563:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3563:17:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "3557:5:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3557:24:4"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3547:6:4",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "3628:83:4",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                            "nodeType": "YulIdentifier",
                                            "src": "3630:77:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3630:79:4"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "3630:79:4"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "3600:6:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3608:18:4",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3597:2:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3597:30:4"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "3594:117:4"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3725:99:4",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3796:9:4"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3807:6:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3792:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3792:22:4"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3816:7:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "3735:56:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3735:89:4"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "3725:6:4"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3359:9:4",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3370:7:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3382:6:4",
                            "type": ""
                          }
                        ],
                        "src": "3287:554:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3943:73:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3960:3:4"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3965:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3953:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3953:19:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3953:19:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3981:29:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4000:3:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4005:4:4",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3996:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3996:14:4"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3981:11:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3915:3:4",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "3920:6:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "3931:11:4",
                            "type": ""
                          }
                        ],
                        "src": "3847:169:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4128:122:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4150:6:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4158:1:4",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4146:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4146:14:4"
                                  },
                                  {
                                    "hexValue": "4a7572792e636f6e7374727563746f723a206e6f7420656e6f756768206a7572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4162:34:4",
                                    "type": "",
                                    "value": "Jury.constructor: not enough jur"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4139:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4139:58:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4139:58:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4218:6:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4226:2:4",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4214:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4214:15:4"
                                  },
                                  {
                                    "hexValue": "79206d656d62657273",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4231:11:4",
                                    "type": "",
                                    "value": "y members"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4207:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4207:36:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4207:36:4"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_83d7abbe591ba3b7619b193a9d3c4a954631bc95633b05d00456924ed9c0ea35",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "4120:6:4",
                            "type": ""
                          }
                        ],
                        "src": "4022:228:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4402:220:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4412:74:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4478:3:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4483:2:4",
                                    "type": "",
                                    "value": "41"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4419:58:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4419:67:4"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "4412:3:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4584:3:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_83d7abbe591ba3b7619b193a9d3c4a954631bc95633b05d00456924ed9c0ea35",
                                  "nodeType": "YulIdentifier",
                                  "src": "4495:88:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4495:93:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4495:93:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4597:19:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4608:3:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4613:2:4",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4604:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4604:12:4"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "4597:3:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_83d7abbe591ba3b7619b193a9d3c4a954631bc95633b05d00456924ed9c0ea35_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4390:3:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "4398:3:4",
                            "type": ""
                          }
                        ],
                        "src": "4256:366:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4799:248:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4809:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4821:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4832:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4817:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4817:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4809:4:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4856:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4867:1:4",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4852:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4852:17:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "4875:4:4"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4881:9:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4871:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4871:20:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4845:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4845:47:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4845:47:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4901:139:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "5035:4:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_83d7abbe591ba3b7619b193a9d3c4a954631bc95633b05d00456924ed9c0ea35_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4909:124:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4909:131:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4901:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_83d7abbe591ba3b7619b193a9d3c4a954631bc95633b05d00456924ed9c0ea35__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4779:9:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4794:4:4",
                            "type": ""
                          }
                        ],
                        "src": "4628:419:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5081:152:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5098:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5101:77:4",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5091:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5091:88:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5091:88:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5195:1:4",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5198:4:4",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5188:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5188:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5188:15:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5219:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5222:4:4",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "5212:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5212:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5212:15:4"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nodeType": "YulFunctionDefinition",
                        "src": "5053:180:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5304:53:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5321:3:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5344:5:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "5326:17:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5326:24:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5314:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5314:37:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5314:37:4"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5292:5:4",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5299:3:4",
                            "type": ""
                          }
                        ],
                        "src": "5239:118:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5461:124:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5471:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5483:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5494:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5479:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5479:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5471:4:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5551:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5564:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5575:1:4",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5560:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5560:17:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5507:43:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5507:71:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5507:71:4"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5433:9:4",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5445:6:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5456:4:4",
                            "type": ""
                          }
                        ],
                        "src": "5363:222:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5619:152:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5636:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5639:77:4",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5629:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5629:88:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5629:88:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5733:1:4",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5736:4:4",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5726:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5726:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5726:15:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5757:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5760:4:4",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "5750:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5750:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5750:15:4"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "5591:180:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5822:32:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5832:16:4",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5843:5:4"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "5832:7:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5804:5:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "5814:7:4",
                            "type": ""
                          }
                        ],
                        "src": "5777:77:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5903:190:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5913:33:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5940:5:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "5922:17:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5922:24:4"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "5913:5:4"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6036:22:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6038:16:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6038:18:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6038:18:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5961:5:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5968:66:4",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "5958:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5958:77:4"
                              },
                              "nodeType": "YulIf",
                              "src": "5955:103:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6067:20:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6078:5:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6085:1:4",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6074:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6074:13:4"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "6067:3:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5889:5:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "5899:3:4",
                            "type": ""
                          }
                        ],
                        "src": "5860:233:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6143:261:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6153:25:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "6176:1:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "6158:17:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6158:20:4"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "6153:1:4"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6187:25:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "6210:1:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "6192:17:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6192:20:4"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "6187:1:4"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6350:22:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6352:16:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6352:18:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6352:18:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "6271:1:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6278:66:4",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                      },
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "6346:1:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "6274:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6274:74:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6268:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6268:81:4"
                              },
                              "nodeType": "YulIf",
                              "src": "6265:107:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6382:16:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "6393:1:4"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "6396:1:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6389:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6389:9:4"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "6382:3:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "6130:1:4",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "6133:1:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "6139:3:4",
                            "type": ""
                          }
                        ],
                        "src": "6099:305:4"
                      }
                    ]
                  },
                  "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_83d7abbe591ba3b7619b193a9d3c4a954631bc95633b05d00456924ed9c0ea35(memPtr) {\n\n        mstore(add(memPtr, 0), \"Jury.constructor: not enough jur\")\n\n        mstore(add(memPtr, 32), \"y members\")\n\n    }\n\n    function abi_encode_t_stringliteral_83d7abbe591ba3b7619b193a9d3c4a954631bc95633b05d00456924ed9c0ea35_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_83d7abbe591ba3b7619b193a9d3c4a954631bc95633b05d00456924ed9c0ea35(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_83d7abbe591ba3b7619b193a9d3c4a954631bc95633b05d00456924ed9c0ea35__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_83d7abbe591ba3b7619b193a9d3c4a954631bc95633b05d00456924ed9c0ea35_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n}\n",
                  "id": 4,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2774 CODESIZE SUB DUP1 PUSH3 0x2774 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x3C5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA DUP2 MLOAD EQ PUSH3 0x98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x8F SWAP1 PUSH3 0x49D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH3 0x186 JUMPI PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0xC1 JUMPI PUSH3 0xC0 PUSH3 0x4BF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x543FA957E48CDDB9C78047C49B8227A327101433E6C106C5632530E20A46185C DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x151 JUMPI PUSH3 0x150 PUSH3 0x4BF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH3 0x168 SWAP2 SWAP1 PUSH3 0x4FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 DUP1 PUSH3 0x17D SWAP1 PUSH3 0x555 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x9B JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x19B SWAP2 SWAP1 PUSH3 0x5A3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP PUSH3 0x600 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x23B DUP3 PUSH3 0x1F0 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x25D JUMPI PUSH3 0x25C PUSH3 0x201 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x272 PUSH3 0x1D7 JUMP JUMPDEST SWAP1 POP PUSH3 0x280 DUP3 DUP3 PUSH3 0x230 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x2A3 JUMPI PUSH3 0x2A2 PUSH3 0x201 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2E6 DUP3 PUSH3 0x2B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2F8 DUP2 PUSH3 0x2D9 JUMP JUMPDEST DUP2 EQ PUSH3 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x318 DUP2 PUSH3 0x2ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x335 PUSH3 0x32F DUP5 PUSH3 0x285 JUMP JUMPDEST PUSH3 0x266 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH3 0x35B JUMPI PUSH3 0x35A PUSH3 0x2B4 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x388 JUMPI DUP1 PUSH3 0x373 DUP9 DUP3 PUSH3 0x307 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x35D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x3AA JUMPI PUSH3 0x3A9 PUSH3 0x1EB JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x3BC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x31E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x3DE JUMPI PUSH3 0x3DD PUSH3 0x1E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3FF JUMPI PUSH3 0x3FE PUSH3 0x1E6 JUMP JUMPDEST JUMPDEST PUSH3 0x40D DUP5 DUP3 DUP6 ADD PUSH3 0x392 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4A7572792E636F6E7374727563746F723A206E6F7420656E6F756768206A7572 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x79206D656D626572730000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x485 PUSH1 0x29 DUP4 PUSH3 0x416 JUMP JUMPDEST SWAP2 POP PUSH3 0x492 DUP3 PUSH3 0x427 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x4B8 DUP2 PUSH3 0x476 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x4F9 DUP2 PUSH3 0x2D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x516 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x4EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x562 DUP3 PUSH3 0x54B JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH3 0x598 JUMPI PUSH3 0x597 PUSH3 0x51C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5B0 DUP3 PUSH3 0x54B JUMP JUMPDEST SWAP2 POP PUSH3 0x5BD DUP4 PUSH3 0x54B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH3 0x5F5 JUMPI PUSH3 0x5F4 PUSH3 0x51C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2164 DUP1 PUSH3 0x610 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64CA6B14 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC84663B0 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC84663B0 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0xCAFD73B8 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xD652EF1A EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xE922DE50 EQ PUSH2 0x2BE JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x64CA6B14 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x8BE3056F EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x90CF581C EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA94C8F3D EQ PUSH2 0x235 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x41C12A70 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x41C12A70 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x564A565D EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x596D7B2F EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1D5 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x1144F44 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x12F37305 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x146F7B7F EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1A37 JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16E PUSH2 0x877 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1AEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH2 0xACD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x1AEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0xAE3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1C5F JUMP JUMPDEST PUSH2 0xB53 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x233 PUSH2 0xDBB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x282 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH2 0xFE5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28C PUSH2 0x1222 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x1AEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0x1244 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP LT ISZERO PUSH2 0x443 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43A SWAP1 PUSH2 0x1E09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH2 0x4DF DUP4 DUP4 DUP4 PUSH2 0x164F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x5DD JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x51C JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x6E4 JUMPI DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x619 JUMPI PUSH2 0x618 PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x692 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x66D JUMPI PUSH2 0x66C PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x6D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C8 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x6DC SWAP1 PUSH2 0x1F19 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5E6 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x70B JUMPI PUSH2 0x70A PUSH2 0x1B1C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x739 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x7B5 SWAP3 SWAP2 SWAP1 PUSH2 0x17EF JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x96F JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x8AE JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xA20 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x994 JUMPI PUSH2 0x993 PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA04 SWAP1 PUSH2 0x1FAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0xA18 SWAP1 PUSH2 0x1F19 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x978 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15180 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB0E SWAP2 SWAP1 PUSH2 0x1FCE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE SWAP1 POP PUSH32 0x4DA9B675E578ACF05CB72712FC12154FC303610A9BEF918062E80E7B25AA045F DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xB47 SWAP3 SWAP2 SWAP1 PUSH2 0x2024 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB65 SWAP2 SWAP1 PUSH2 0x1FCE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD PUSH2 0xBAE SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xCCB JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xC0A JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xD87 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xCF0 JUMPI PUSH2 0xCEF PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD0B JUMPI PUSH2 0xD0A PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD5E JUMPI PUSH2 0xD5D PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x80 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0xD7F SWAP1 PUSH2 0x1F19 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCD4 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH32 0xC796AD74732D2A065B3161C4BF85138CB8D4B0561D078CC02AA237D2E29141DB PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xEB3 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xDF2 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xF64 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xED8 JUMPI PUSH2 0xED7 PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF48 SWAP1 PUSH2 0x1FAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0xF5C SWAP1 PUSH2 0x1F19 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEBC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x10DD JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x101C JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x118E JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1102 JUMPI PUSH2 0x1101 PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x117B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1172 SWAP1 PUSH2 0x1FAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x1186 SWAP1 PUSH2 0x1F19 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10E6 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x543FA957E48CDDB9C78047C49B8227A327101433E6C106C5632530E20A46185C DUP3 PUSH1 0x40 MLOAD PUSH2 0x1216 SWAP2 SWAP1 PUSH2 0x2081 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x12D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C7 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1368 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x131E JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1417 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x13A5 JUMPI PUSH2 0x13A4 PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1404 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13FB SWAP1 PUSH2 0x210E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x140F SWAP1 PUSH2 0x1F19 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1372 JUMP JUMPDEST POP PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1534 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x14EA JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP GT ISZERO PUSH2 0x164A JUMPI PUSH2 0x1649 DUP2 PUSH1 0x60 ADD MLOAD DUP3 PUSH1 0x80 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x164F JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1662 SWAP2 SWAP1 PUSH2 0x1FCE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x98D85359D4C56C7EAF2486712C329156C582A48E60B4188BA13A7AFA45CFFF32 PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH2 0x17E2 SWAP3 SWAP2 SWAP1 PUSH2 0x2024 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1868 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1867 JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x180F JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1875 SWAP2 SWAP1 PUSH2 0x1879 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1892 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x187A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18BD DUP2 PUSH2 0x18AA JUMP JUMPDEST DUP2 EQ PUSH2 0x18C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18DA DUP2 PUSH2 0x18B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18F7 JUMPI PUSH2 0x18F6 PUSH2 0x18A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1905 DUP6 DUP3 DUP7 ADD PUSH2 0x18CB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1916 DUP6 DUP3 DUP7 ADD PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194B DUP3 PUSH2 0x1920 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x195B DUP2 PUSH2 0x1940 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x196A DUP2 PUSH2 0x18AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1985 DUP2 PUSH2 0x1970 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x19A0 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x19AD PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x19BA PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x19C7 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x19D4 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19F4 JUMPI PUSH2 0x19F3 PUSH2 0x18A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A02 DUP5 DUP3 DUP6 ADD PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A14 DUP2 PUSH2 0x1940 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A31 DUP2 PUSH2 0x1A0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A50 JUMPI PUSH2 0x1A4F PUSH2 0x18A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A5E DUP7 DUP3 DUP8 ADD PUSH2 0x1A22 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A6F DUP7 DUP3 DUP8 ADD PUSH2 0x1A22 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A80 DUP7 DUP3 DUP8 ADD PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1A9F PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x1AAC PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x1AB9 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x1AC6 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x1AD3 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x1AE0 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B00 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1B54 DUP3 PUSH2 0x1B0B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1B73 JUMPI PUSH2 0x1B72 PUSH2 0x1B1C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B86 PUSH2 0x1896 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B92 DUP3 DUP3 PUSH2 0x1B4B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BB2 JUMPI PUSH2 0x1BB1 PUSH2 0x1B1C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BDB PUSH2 0x1BD6 DUP5 PUSH2 0x1B97 JUMP JUMPDEST PUSH2 0x1B7C JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1BFE JUMPI PUSH2 0x1BFD PUSH2 0x1BC3 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C27 JUMPI DUP1 PUSH2 0x1C13 DUP9 DUP3 PUSH2 0x1A22 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C00 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C46 JUMPI PUSH2 0x1C45 PUSH2 0x1B06 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C56 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C75 JUMPI PUSH2 0x1C74 PUSH2 0x18A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C93 JUMPI PUSH2 0x1C92 PUSH2 0x18A5 JUMP JUMPDEST JUMPDEST PUSH2 0x1C9F DUP5 DUP3 DUP6 ADD PUSH2 0x1C31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1CBD PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1CCA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x1CD7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x1CE4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1952 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D03 JUMPI PUSH2 0x1D02 PUSH2 0x18A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D11 DUP5 DUP3 DUP6 ADD PUSH2 0x1A22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x63616C6C6572206D757374206265206A75727920706F6F6C206D656D62657200 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D61 PUSH1 0x1F DUP4 PUSH2 0x1D1A JUMP JUMPDEST SWAP2 POP PUSH2 0x1D6C DUP3 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D90 DUP2 PUSH2 0x1D54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4A7572792E6E6577446973707574655375626D697373696F6E3A206E6F742065 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6F75676820617070726F76616C7320666F7220646973707574650000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF3 PUSH1 0x3B DUP4 PUSH2 0x1D1A JUMP JUMPDEST SWAP2 POP PUSH2 0x1DFE DUP3 PUSH2 0x1D97 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E22 DUP2 PUSH2 0x1DE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4A7572792E6E6577446973707574653A206C697665206A757279206D656D6265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616E6E6F7420626520696E766F6C766564000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB4 PUSH1 0x34 DUP4 PUSH2 0x1D1A JUMP JUMPDEST SWAP2 POP PUSH2 0x1EBF DUP3 PUSH2 0x1E58 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EE3 DUP2 PUSH2 0x1EA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F24 DUP3 PUSH2 0x18AA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1F57 JUMPI PUSH2 0x1F56 PUSH2 0x1EEA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x63616C6C6572206D757374206265206A757279206D656D626572000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F98 PUSH1 0x1A DUP4 PUSH2 0x1D1A JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA3 DUP3 PUSH2 0x1F62 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FC7 DUP2 PUSH2 0x1F8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD9 DUP3 PUSH2 0x18AA JUMP JUMPDEST SWAP2 POP PUSH2 0x1FE4 DUP4 PUSH2 0x18AA JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2019 JUMPI PUSH2 0x2018 PUSH2 0x1EEA JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2039 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x2046 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1961 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2058 DUP3 PUSH2 0x18AA JUMP JUMPDEST SWAP2 POP PUSH2 0x2063 DUP4 PUSH2 0x18AA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2076 JUMPI PUSH2 0x2075 PUSH2 0x1EEA JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2096 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1952 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4A7572792E617070726F76654469737075746550726F706F73616C3A206A7572 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F7220616C726561647920617070726F766564000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F8 PUSH1 0x34 DUP4 PUSH2 0x1D1A JUMP JUMPDEST SWAP2 POP PUSH2 0x2103 DUP3 PUSH2 0x209C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2127 DUP2 PUSH2 0x20EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 BALANCE PUSH7 0x27508D8A87E824 0xB7 CREATE TIMESTAMP 0x29 SWAP2 CALLDATASIZE SWAP1 PUSH15 0x64877155D400748603E8D784E6E364 PUSH20 0x6F6C634300080900330000000000000000000000 ",
              "sourceMap": "185:5630:2:-:0;;;1247:459;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1006:5:0;996:7;;:15;;;;;;;;;;;;;;;;;;255:2:2;1328:19;:26;:41;1307:129;;;;;;;;;;;;:::i;:::-;;;;;;;;;1451:9;1446:188;1470:19;:26;1466:1;:30;1446:188;;;1559:4;1517:15;:39;1533:19;1553:1;1533:22;;;;;;;;:::i;:::-;;;;;;;;1517:39;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;1582:41;1600:19;1620:1;1600:22;;;;;;;;:::i;:::-;;;;;;;;1582:41;;;;;;:::i;:::-;;;;;;;;1498:3;;;;;:::i;:::-;;;;1446:188;;;;1658:1;1643:11;;:16;;;;;;;:::i;:::-;;;;;;;;1695:4;1669:10;:23;1680:11;;1669:23;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1247:459;185:5630;;7:75:4;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1173:311::-;1250:4;1340:18;1332:6;1329:30;1326:56;;;1362:18;;:::i;:::-;1326:56;1412:4;1404:6;1400:17;1392:25;;1472:4;1466;1462:15;1454:23;;1173:311;;;:::o;1490:117::-;1599:1;1596;1589:12;1613:126;1650:7;1690:42;1683:5;1679:54;1668:65;;1613:126;;;:::o;1745:96::-;1782:7;1811:24;1829:5;1811:24;:::i;:::-;1800:35;;1745:96;;;:::o;1847:122::-;1920:24;1938:5;1920:24;:::i;:::-;1913:5;1910:35;1900:63;;1959:1;1956;1949:12;1900:63;1847:122;:::o;1975:143::-;2032:5;2063:6;2057:13;2048:22;;2079:33;2106:5;2079:33;:::i;:::-;1975:143;;;;:::o;2141:732::-;2248:5;2273:81;2289:64;2346:6;2289:64;:::i;:::-;2273:81;:::i;:::-;2264:90;;2374:5;2403:6;2396:5;2389:21;2437:4;2430:5;2426:16;2419:23;;2490:4;2482:6;2478:17;2470:6;2466:30;2519:3;2511:6;2508:15;2505:122;;;2538:79;;:::i;:::-;2505:122;2653:6;2636:231;2670:6;2665:3;2662:15;2636:231;;;2745:3;2774:48;2818:3;2806:10;2774:48;:::i;:::-;2769:3;2762:61;2852:4;2847:3;2843:14;2836:21;;2712:155;2696:4;2691:3;2687:14;2680:21;;2636:231;;;2640:21;2254:619;;2141:732;;;;;:::o;2896:385::-;2978:5;3027:3;3020:4;3012:6;3008:17;3004:27;2994:122;;3035:79;;:::i;:::-;2994:122;3145:6;3139:13;3170:105;3271:3;3263:6;3256:4;3248:6;3244:17;3170:105;:::i;:::-;3161:114;;2984:297;2896:385;;;;:::o;3287:554::-;3382:6;3431:2;3419:9;3410:7;3406:23;3402:32;3399:119;;;3437:79;;:::i;:::-;3399:119;3578:1;3567:9;3563:17;3557:24;3608:18;3600:6;3597:30;3594:117;;;3630:79;;:::i;:::-;3594:117;3735:89;3816:7;3807:6;3796:9;3792:22;3735:89;:::i;:::-;3725:99;;3528:306;3287:554;;;;:::o;3847:169::-;3931:11;3965:6;3960:3;3953:19;4005:4;4000:3;3996:14;3981:29;;3847:169;;;;:::o;4022:228::-;4162:34;4158:1;4150:6;4146:14;4139:58;4231:11;4226:2;4218:6;4214:15;4207:36;4022:228;:::o;4256:366::-;4398:3;4419:67;4483:2;4478:3;4419:67;:::i;:::-;4412:74;;4495:93;4584:3;4495:93;:::i;:::-;4613:2;4608:3;4604:12;4597:19;;4256:366;;;:::o;4628:419::-;4794:4;4832:2;4821:9;4817:18;4809:26;;4881:9;4875:4;4871:20;4867:1;4856:9;4852:17;4845:47;4909:131;5035:4;4909:131;:::i;:::-;4901:139;;4628:419;;;:::o;5053:180::-;5101:77;5098:1;5091:88;5198:4;5195:1;5188:15;5222:4;5219:1;5212:15;5239:118;5326:24;5344:5;5326:24;:::i;:::-;5321:3;5314:37;5239:118;;:::o;5363:222::-;5456:4;5494:2;5483:9;5479:18;5471:26;;5507:71;5575:1;5564:9;5560:17;5551:6;5507:71;:::i;:::-;5363:222;;;;:::o;5591:180::-;5639:77;5636:1;5629:88;5736:4;5733:1;5726:15;5760:4;5757:1;5750:15;5777:77;5814:7;5843:5;5832:16;;5777:77;;;:::o;5860:233::-;5899:3;5922:24;5940:5;5922:24;:::i;:::-;5913:33;;5968:66;5961:5;5958:77;5955:103;;;6038:18;;:::i;:::-;5955:103;6085:1;6078:5;6074:13;6067:20;;5860:233;;;:::o;6099:305::-;6139:3;6158:20;6176:1;6158:20;:::i;:::-;6153:25;;6192:20;6210:1;6192:20;:::i;:::-;6187:25;;6346:1;6278:66;6274:74;6271:1;6268:81;6265:107;;;6352:18;;:::i;:::-;6265:107;6396:1;6393;6389:9;6382:16;;6099:305;;;;:::o;185:5630:2:-;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_newDispute_620": {
                  "entryPoint": 5711,
                  "id": 620,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@addJuryPoolMember_520": {
                  "entryPoint": 4069,
                  "id": 520,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@approveDisputeProposal_420": {
                  "entryPoint": 4676,
                  "id": 420,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@disputeProposals_164": {
                  "entryPoint": 3944,
                  "id": 164,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@disputes_159": {
                  "entryPoint": 2596,
                  "id": 159,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@extendDisputeDeadline_486": {
                  "entryPoint": 2787,
                  "id": 486,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@juries_174": {
                  "entryPoint": 730,
                  "id": 174,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@juryIsLive_178": {
                  "entryPoint": 2733,
                  "id": 178,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@juryPoolMembers_168": {
                  "entryPoint": 4644,
                  "id": 168,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@newDisputeProposal_345": {
                  "entryPoint": 1253,
                  "id": 345,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@newDisputeSubmission_466": {
                  "entryPoint": 858,
                  "id": 466,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@newLiveJury_588": {
                  "entryPoint": 2899,
                  "id": 588,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@paused_51": {
                  "entryPoint": 2765,
                  "id": 51,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@setJuryType_502": {
                  "entryPoint": 4642,
                  "id": 502,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@voteNo_498": {
                  "entryPoint": 2167,
                  "id": 498,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@voteYes_492": {
                  "entryPoint": 3515,
                  "id": 492,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
                  "entryPoint": 7112,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_decode_t_address": {
                  "entryPoint": 6690,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_array$_t_address_$dyn_memory_ptr": {
                  "entryPoint": 7217,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_uint256": {
                  "entryPoint": 6347,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 7405,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_addresst_uint256": {
                  "entryPoint": 6711,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr": {
                  "entryPoint": 7263,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 6622,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256t_uint256": {
                  "entryPoint": 6368,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_encode_t_address_to_t_address_fromStack": {
                  "entryPoint": 6482,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_bool_to_t_bool_fromStack": {
                  "entryPoint": 6524,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_stringliteral_1ea329905cdc51548905787a54f9ce8aa58c5ce64b9e5a44c2ee04616ffd3811_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 7508,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_430f6ef4fe4006807861843b861b357ab5a8b84e8d2d03d0f661c5bc819001f2_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 7847,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_496e018b2c1f53adad34f0d5bb8485ac22f9993dc2ded520bf0e981bf3192bbb_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 7654,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_64b2c92ce7fa731f5cae89967dcd7969508a11e3622a8d36c71fd5cf5f1ac1ee_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 8075,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_f086086f7752b8525006d1e9f066ad7c93be0bccd319b472b9e14e2bccc06bef_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 8427,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_uint256_to_t_uint256_fromStack": {
                  "entryPoint": 6497,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": 8321,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
                  "entryPoint": 6539,
                  "id": null,
                  "parameterSlots": 6,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": 6891,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool_t_uint256_t_address_t_address__to_t_bool_t_uint256_t_address_t_address__fromStack_reversed": {
                  "entryPoint": 7336,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_1ea329905cdc51548905787a54f9ce8aa58c5ce64b9e5a44c2ee04616ffd3811__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 7543,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_430f6ef4fe4006807861843b861b357ab5a8b84e8d2d03d0f661c5bc819001f2__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 7882,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_496e018b2c1f53adad34f0d5bb8485ac22f9993dc2ded520bf0e981bf3192bbb__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 7689,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_64b2c92ce7fa731f5cae89967dcd7969508a11e3622a8d36c71fd5cf5f1ac1ee__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 8110,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_f086086f7752b8525006d1e9f066ad7c93be0bccd319b472b9e14e2bccc06bef__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 8462,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": 8228,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address_t_address_t_bool__to_t_uint256_t_uint256_t_uint256_t_address_t_address_t_bool__fromStack_reversed": {
                  "entryPoint": 6794,
                  "id": null,
                  "parameterSlots": 7,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 7036,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": 6294,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
                  "entryPoint": 7063,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
                  "entryPoint": 7450,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 8142,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 8269,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_t_address": {
                  "entryPoint": 6464,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_bool": {
                  "entryPoint": 6512,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint160": {
                  "entryPoint": 6432,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint256": {
                  "entryPoint": 6314,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 6987,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "increment_t_uint256": {
                  "entryPoint": 7961,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 7914,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 7721,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 6940,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
                  "entryPoint": 6918,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
                  "entryPoint": 7107,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": 6309,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 6304,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of_32": {
                  "entryPoint": 6923,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "store_literal_in_memory_1ea329905cdc51548905787a54f9ce8aa58c5ce64b9e5a44c2ee04616ffd3811": {
                  "entryPoint": 7467,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_430f6ef4fe4006807861843b861b357ab5a8b84e8d2d03d0f661c5bc819001f2": {
                  "entryPoint": 7768,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_496e018b2c1f53adad34f0d5bb8485ac22f9993dc2ded520bf0e981bf3192bbb": {
                  "entryPoint": 7575,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_64b2c92ce7fa731f5cae89967dcd7969508a11e3622a8d36c71fd5cf5f1ac1ee": {
                  "entryPoint": 8034,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_f086086f7752b8525006d1e9f066ad7c93be0bccd319b472b9e14e2bccc06bef": {
                  "entryPoint": 8348,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_address": {
                  "entryPoint": 6667,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_uint256": {
                  "entryPoint": 6324,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:15524:4",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "47:35:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "57:19:4",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "73:2:4",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "67:5:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "67:9:4"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "57:6:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "allocate_unbounded",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "40:6:4",
                            "type": ""
                          }
                        ],
                        "src": "7:75:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "177:28:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "194:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "197:1:4",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "187:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "187:12:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "187:12:4"
                            }
                          ]
                        },
                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                        "nodeType": "YulFunctionDefinition",
                        "src": "88:117:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "300:28:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "317:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "320:1:4",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "310:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "310:12:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "310:12:4"
                            }
                          ]
                        },
                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                        "nodeType": "YulFunctionDefinition",
                        "src": "211:117:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "379:32:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "389:16:4",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "400:5:4"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "389:7:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "361:5:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "371:7:4",
                            "type": ""
                          }
                        ],
                        "src": "334:77:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "460:79:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "517:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "526:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "529:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "519:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "519:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "519:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "483:5:4"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "508:5:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "490:17:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "490:24:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "480:2:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "480:35:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "473:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "473:43:4"
                              },
                              "nodeType": "YulIf",
                              "src": "470:63:4"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "453:5:4",
                            "type": ""
                          }
                        ],
                        "src": "417:122:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "597:87:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "607:29:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "629:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "616:12:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "616:20:4"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "607:5:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "672:5:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "645:26:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "645:33:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "645:33:4"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "575:6:4",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "583:3:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "591:5:4",
                            "type": ""
                          }
                        ],
                        "src": "545:139:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "773:391:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "819:83:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "821:77:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "821:79:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "821:79:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "794:7:4"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "803:9:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "790:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "790:23:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "815:2:4",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "786:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "786:32:4"
                              },
                              "nodeType": "YulIf",
                              "src": "783:119:4"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "912:117:4",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "927:15:4",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "941:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "931:6:4",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "956:63:4",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "991:9:4"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1002:6:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "987:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "987:22:4"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1011:7:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "966:20:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "966:53:4"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "956:6:4"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1039:118:4",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1054:16:4",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1068:2:4",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1058:6:4",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1084:63:4",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1119:9:4"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1130:6:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1115:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1115:22:4"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1139:7:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1094:20:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1094:53:4"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1084:6:4"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "735:9:4",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "746:7:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "758:6:4",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "766:6:4",
                            "type": ""
                          }
                        ],
                        "src": "690:474:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1215:81:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1225:65:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1240:5:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1247:42:4",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1236:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1236:54:4"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "1225:7:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1197:5:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "1207:7:4",
                            "type": ""
                          }
                        ],
                        "src": "1170:126:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1347:51:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1357:35:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1386:5:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "1368:17:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1368:24:4"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "1357:7:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1329:5:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "1339:7:4",
                            "type": ""
                          }
                        ],
                        "src": "1302:96:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1469:53:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1486:3:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1509:5:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1491:17:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1491:24:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1479:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1479:37:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1479:37:4"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1457:5:4",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1464:3:4",
                            "type": ""
                          }
                        ],
                        "src": "1404:118:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1593:53:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1610:3:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1633:5:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1615:17:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1615:24:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1603:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1603:37:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1603:37:4"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1581:5:4",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1588:3:4",
                            "type": ""
                          }
                        ],
                        "src": "1528:118:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1694:48:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1704:32:4",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1729:5:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "1722:6:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1722:13:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1715:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1715:21:4"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "1704:7:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1676:5:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "1686:7:4",
                            "type": ""
                          }
                        ],
                        "src": "1652:90:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1807:50:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1824:3:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1844:5:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "1829:14:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1829:21:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1817:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1817:34:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1817:34:4"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bool_to_t_bool_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1795:5:4",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1802:3:4",
                            "type": ""
                          }
                        ],
                        "src": "1748:109:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2067:448:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2077:27:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2089:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2100:3:4",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2085:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2085:19:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2077:4:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2158:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2171:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2182:1:4",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2167:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2167:17:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2114:43:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2114:71:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2114:71:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2239:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2252:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2263:2:4",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2248:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2248:18:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2195:43:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2195:72:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2195:72:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "2321:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2334:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2345:2:4",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2330:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2330:18:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2277:43:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2277:72:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2277:72:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "2403:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2416:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2427:2:4",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2412:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2412:18:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2359:43:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2359:72:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2359:72:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "2479:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2492:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2503:3:4",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2488:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2488:19:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2441:37:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2441:67:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2441:67:4"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2007:9:4",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "2019:6:4",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "2027:6:4",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "2035:6:4",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2043:6:4",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2051:6:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2062:4:4",
                            "type": ""
                          }
                        ],
                        "src": "1863:652:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2587:263:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2633:83:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "2635:77:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2635:79:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2635:79:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2608:7:4"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2617:9:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2604:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2604:23:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2629:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2600:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2600:32:4"
                              },
                              "nodeType": "YulIf",
                              "src": "2597:119:4"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2726:117:4",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2741:15:4",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2755:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2745:6:4",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2770:63:4",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2805:9:4"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2816:6:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2801:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2801:22:4"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2825:7:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "2780:20:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2780:53:4"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2770:6:4"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2557:9:4",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2568:7:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2580:6:4",
                            "type": ""
                          }
                        ],
                        "src": "2521:329:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2899:79:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2956:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2965:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2968:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2958:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2958:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2958:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2922:5:4"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "2947:5:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "2929:17:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2929:24:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "2919:2:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2919:35:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2912:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2912:43:4"
                              },
                              "nodeType": "YulIf",
                              "src": "2909:63:4"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2892:5:4",
                            "type": ""
                          }
                        ],
                        "src": "2856:122:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3036:87:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3046:29:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "3068:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3055:12:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3055:20:4"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "3046:5:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3111:5:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3084:26:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3084:33:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3084:33:4"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "3014:6:4",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "3022:3:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3030:5:4",
                            "type": ""
                          }
                        ],
                        "src": "2984:139:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3229:519:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3275:83:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "3277:77:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3277:79:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3277:79:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3250:7:4"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3259:9:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3246:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3246:23:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3271:2:4",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3242:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3242:32:4"
                              },
                              "nodeType": "YulIf",
                              "src": "3239:119:4"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3368:117:4",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3383:15:4",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3397:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3387:6:4",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3412:63:4",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3447:9:4"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3458:6:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3443:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3443:22:4"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3467:7:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3422:20:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3422:53:4"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "3412:6:4"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3495:118:4",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3510:16:4",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3524:2:4",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3514:6:4",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3540:63:4",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3575:9:4"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3586:6:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3571:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3571:22:4"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3595:7:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3550:20:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3550:53:4"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "3540:6:4"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3623:118:4",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3638:16:4",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3652:2:4",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3642:6:4",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3668:63:4",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3703:9:4"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3714:6:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3699:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3699:22:4"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3723:7:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "3678:20:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3678:53:4"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "3668:6:4"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3183:9:4",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3194:7:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3206:6:4",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3214:6:4",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "3222:6:4",
                            "type": ""
                          }
                        ],
                        "src": "3129:619:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3986:531:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3996:27:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4008:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4019:3:4",
                                    "type": "",
                                    "value": "192"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4004:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4004:19:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3996:4:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4077:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4090:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4101:1:4",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4086:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4086:17:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4033:43:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4033:71:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4033:71:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4158:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4171:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4182:2:4",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4167:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4167:18:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4114:43:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4114:72:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4114:72:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "4240:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4253:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4264:2:4",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4249:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4249:18:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4196:43:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4196:72:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4196:72:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "4322:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4335:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4346:2:4",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4331:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4331:18:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4278:43:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4278:72:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4278:72:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "4404:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4417:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4428:3:4",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4413:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4413:19:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4360:43:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4360:73:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4360:73:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value5",
                                    "nodeType": "YulIdentifier",
                                    "src": "4481:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4494:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4505:3:4",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4490:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4490:19:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4443:37:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4443:67:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4443:67:4"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address_t_address_t_bool__to_t_uint256_t_uint256_t_uint256_t_address_t_address_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3918:9:4",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "3930:6:4",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "3938:6:4",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "3946:6:4",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "3954:6:4",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3962:6:4",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3970:6:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3981:4:4",
                            "type": ""
                          }
                        ],
                        "src": "3754:763:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4615:118:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4625:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4637:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4648:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4633:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4633:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4625:4:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4699:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4712:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4723:1:4",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4708:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4708:17:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4661:37:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4661:65:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4661:65:4"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4587:9:4",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4599:6:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4610:4:4",
                            "type": ""
                          }
                        ],
                        "src": "4523:210:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4828:28:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4845:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4848:1:4",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "4838:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4838:12:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4838:12:4"
                            }
                          ]
                        },
                        "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                        "nodeType": "YulFunctionDefinition",
                        "src": "4739:117:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4910:54:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4920:38:4",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4938:5:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4945:2:4",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4934:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4934:14:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4954:2:4",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "4950:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4950:7:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "4930:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4930:28:4"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "4920:6:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "round_up_to_mul_of_32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4893:5:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "4903:6:4",
                            "type": ""
                          }
                        ],
                        "src": "4862:102:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4998:152:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5015:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5018:77:4",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5008:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5008:88:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5008:88:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5112:1:4",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5115:4:4",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5105:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5105:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5105:15:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5136:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5139:4:4",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "5129:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5129:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5129:15:4"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "4970:180:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5199:238:4",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5209:58:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "5231:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "size",
                                        "nodeType": "YulIdentifier",
                                        "src": "5261:4:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "5239:21:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5239:27:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5227:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5227:40:4"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "5213:10:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5378:22:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "5380:16:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5380:18:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5380:18:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5321:10:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5333:18:4",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "5318:2:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5318:34:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5357:10:4"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5369:6:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "5354:2:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5354:22:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "5315:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5315:62:4"
                              },
                              "nodeType": "YulIf",
                              "src": "5312:88:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5416:2:4",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "5420:10:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5409:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5409:22:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5409:22:4"
                            }
                          ]
                        },
                        "name": "finalize_allocation",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "5185:6:4",
                            "type": ""
                          },
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "5193:4:4",
                            "type": ""
                          }
                        ],
                        "src": "5156:281:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5484:88:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5494:30:4",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "allocate_unbounded",
                                  "nodeType": "YulIdentifier",
                                  "src": "5504:18:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5504:20:4"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "5494:6:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "5553:6:4"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "5561:4:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "finalize_allocation",
                                  "nodeType": "YulIdentifier",
                                  "src": "5533:19:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5533:33:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5533:33:4"
                            }
                          ]
                        },
                        "name": "allocate_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "5468:4:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "5477:6:4",
                            "type": ""
                          }
                        ],
                        "src": "5443:129:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5660:229:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5765:22:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "5767:16:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5767:18:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5767:18:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5737:6:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5745:18:4",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5734:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5734:30:4"
                              },
                              "nodeType": "YulIf",
                              "src": "5731:56:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5797:25:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5809:6:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5817:4:4",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "5805:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5805:17:4"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "5797:4:4"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5859:23:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "5871:4:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5877:4:4",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5867:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5867:15:4"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "5859:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "5644:6:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "5655:4:4",
                            "type": ""
                          }
                        ],
                        "src": "5578:311:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5984:28:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6001:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6004:1:4",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "5994:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5994:12:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5994:12:4"
                            }
                          ]
                        },
                        "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
                        "nodeType": "YulFunctionDefinition",
                        "src": "5895:117:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6137:608:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6147:90:4",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "6229:6:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "6172:56:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6172:64:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "6156:15:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6156:81:4"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "6147:5:4"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6246:16:4",
                              "value": {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "6257:5:4"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "6250:3:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "6279:5:4"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6286:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6272:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6272:21:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6272:21:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6302:23:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "6313:5:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6320:4:4",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6309:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6309:16:4"
                              },
                              "variableNames": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6302:3:4"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6335:44:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "6353:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "6365:6:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6373:4:4",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mul",
                                      "nodeType": "YulIdentifier",
                                      "src": "6361:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6361:17:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6349:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6349:30:4"
                              },
                              "variables": [
                                {
                                  "name": "srcEnd",
                                  "nodeType": "YulTypedName",
                                  "src": "6339:6:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6407:103:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
                                        "nodeType": "YulIdentifier",
                                        "src": "6421:77:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6421:79:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6421:79:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "srcEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "6394:6:4"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "6402:3:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6391:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6391:15:4"
                              },
                              "nodeType": "YulIf",
                              "src": "6388:122:4"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6595:144:4",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "6610:21:4",
                                    "value": {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "6628:3:4"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementPos",
                                        "nodeType": "YulTypedName",
                                        "src": "6614:10:4",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "6652:3:4"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "elementPos",
                                              "nodeType": "YulIdentifier",
                                              "src": "6678:10:4"
                                            },
                                            {
                                              "name": "end",
                                              "nodeType": "YulIdentifier",
                                              "src": "6690:3:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "abi_decode_t_address",
                                            "nodeType": "YulIdentifier",
                                            "src": "6657:20:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6657:37:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "6645:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6645:50:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6645:50:4"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "6708:21:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "6719:3:4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6724:4:4",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6715:3:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6715:14:4"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "6708:3:4"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "6548:3:4"
                                  },
                                  {
                                    "name": "srcEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "6553:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6545:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6545:15:4"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "6561:25:4",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "6563:21:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "6574:3:4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6579:4:4",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6570:3:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6570:14:4"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "6563:3:4"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "6523:21:4",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "6525:17:4",
                                    "value": {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "6536:6:4"
                                    },
                                    "variables": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulTypedName",
                                        "src": "6529:3:4",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "6519:220:4"
                            }
                          ]
                        },
                        "name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "6107:6:4",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "6115:6:4",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "6123:3:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "6131:5:4",
                            "type": ""
                          }
                        ],
                        "src": "6035:710:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6845:293:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6894:83:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                                        "nodeType": "YulIdentifier",
                                        "src": "6896:77:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6896:79:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6896:79:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "6873:6:4"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6881:4:4",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6869:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6869:17:4"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "6888:3:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "6865:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6865:27:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6858:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6858:35:4"
                              },
                              "nodeType": "YulIf",
                              "src": "6855:122:4"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6986:34:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "7013:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7000:12:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7000:20:4"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "6990:6:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7029:103:4",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "7105:6:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7113:4:4",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7101:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7101:17:4"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7120:6:4"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "7128:3:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "7038:62:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7038:94:4"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "7029:5:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "6823:6:4",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "6831:3:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "6839:5:4",
                            "type": ""
                          }
                        ],
                        "src": "6768:370:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7235:448:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7281:83:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "7283:77:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7283:79:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7283:79:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "7256:7:4"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7265:9:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "7252:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7252:23:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7277:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7248:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7248:32:4"
                              },
                              "nodeType": "YulIf",
                              "src": "7245:119:4"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "7374:302:4",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "7389:45:4",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "7420:9:4"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "7431:1:4",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7416:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7416:17:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "7403:12:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7403:31:4"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "7393:6:4",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "7481:83:4",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                            "nodeType": "YulIdentifier",
                                            "src": "7483:77:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "7483:79:4"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "7483:79:4"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "7453:6:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7461:18:4",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "7450:2:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7450:30:4"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "7447:117:4"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "7578:88:4",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "7638:9:4"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "7649:6:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7634:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7634:22:4"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "7658:7:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "7588:45:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7588:78:4"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "7578:6:4"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7205:9:4",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "7216:7:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7228:6:4",
                            "type": ""
                          }
                        ],
                        "src": "7144:539:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7865:365:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7875:27:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7887:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7898:3:4",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7883:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7883:19:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7875:4:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7950:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7963:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7974:1:4",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7959:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7959:17:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7912:37:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7912:65:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7912:65:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8031:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8044:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8055:2:4",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8040:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8040:18:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7987:43:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7987:72:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7987:72:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "8113:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8126:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8137:2:4",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8122:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8122:18:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8069:43:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8069:72:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8069:72:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "8195:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8208:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8219:2:4",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8204:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8204:18:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8151:43:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8151:72:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8151:72:4"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool_t_uint256_t_address_t_address__to_t_bool_t_uint256_t_address_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7813:9:4",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "7825:6:4",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "7833:6:4",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "7841:6:4",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7849:6:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7860:4:4",
                            "type": ""
                          }
                        ],
                        "src": "7689:541:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8302:263:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8348:83:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "8350:77:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8350:79:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8350:79:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "8323:7:4"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8332:9:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "8319:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8319:23:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8344:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8315:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8315:32:4"
                              },
                              "nodeType": "YulIf",
                              "src": "8312:119:4"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "8441:117:4",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "8456:15:4",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8470:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "8460:6:4",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "8485:63:4",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "8520:9:4"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "8531:6:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "8516:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8516:22:4"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "8540:7:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "8495:20:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8495:53:4"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "8485:6:4"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8272:9:4",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "8283:7:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8295:6:4",
                            "type": ""
                          }
                        ],
                        "src": "8236:329:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8667:73:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8684:3:4"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8689:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8677:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8677:19:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8677:19:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8705:29:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8724:3:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8729:4:4",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8720:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8720:14:4"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "8705:11:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "8639:3:4",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "8644:6:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "8655:11:4",
                            "type": ""
                          }
                        ],
                        "src": "8571:169:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8852:75:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "8874:6:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8882:1:4",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8870:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8870:14:4"
                                  },
                                  {
                                    "hexValue": "63616c6c6572206d757374206265206a75727920706f6f6c206d656d626572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8886:33:4",
                                    "type": "",
                                    "value": "caller must be jury pool member"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8863:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8863:57:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8863:57:4"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_1ea329905cdc51548905787a54f9ce8aa58c5ce64b9e5a44c2ee04616ffd3811",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "8844:6:4",
                            "type": ""
                          }
                        ],
                        "src": "8746:181:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9079:220:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9089:74:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9155:3:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9160:2:4",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9096:58:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9096:67:4"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "9089:3:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9261:3:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_1ea329905cdc51548905787a54f9ce8aa58c5ce64b9e5a44c2ee04616ffd3811",
                                  "nodeType": "YulIdentifier",
                                  "src": "9172:88:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9172:93:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9172:93:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9274:19:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9285:3:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9290:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9281:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9281:12:4"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "9274:3:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_1ea329905cdc51548905787a54f9ce8aa58c5ce64b9e5a44c2ee04616ffd3811_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "9067:3:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "9075:3:4",
                            "type": ""
                          }
                        ],
                        "src": "8933:366:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9476:248:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9486:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9498:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9509:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9494:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9494:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9486:4:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9533:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9544:1:4",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9529:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9529:17:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "9552:4:4"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9558:9:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "9548:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9548:20:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9522:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9522:47:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9522:47:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9578:139:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "9712:4:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_1ea329905cdc51548905787a54f9ce8aa58c5ce64b9e5a44c2ee04616ffd3811_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9586:124:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9586:131:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9578:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_1ea329905cdc51548905787a54f9ce8aa58c5ce64b9e5a44c2ee04616ffd3811__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9456:9:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9471:4:4",
                            "type": ""
                          }
                        ],
                        "src": "9305:419:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9836:140:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "9858:6:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9866:1:4",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9854:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9854:14:4"
                                  },
                                  {
                                    "hexValue": "4a7572792e6e6577446973707574655375626d697373696f6e3a206e6f742065",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9870:34:4",
                                    "type": "",
                                    "value": "Jury.newDisputeSubmission: not e"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9847:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9847:58:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9847:58:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "9926:6:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9934:2:4",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9922:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9922:15:4"
                                  },
                                  {
                                    "hexValue": "6e6f75676820617070726f76616c7320666f722064697370757465",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9939:29:4",
                                    "type": "",
                                    "value": "nough approvals for dispute"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9915:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9915:54:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9915:54:4"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_496e018b2c1f53adad34f0d5bb8485ac22f9993dc2ded520bf0e981bf3192bbb",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "9828:6:4",
                            "type": ""
                          }
                        ],
                        "src": "9730:246:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10128:220:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10138:74:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10204:3:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10209:2:4",
                                    "type": "",
                                    "value": "59"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10145:58:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10145:67:4"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "10138:3:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10310:3:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_496e018b2c1f53adad34f0d5bb8485ac22f9993dc2ded520bf0e981bf3192bbb",
                                  "nodeType": "YulIdentifier",
                                  "src": "10221:88:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10221:93:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10221:93:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10323:19:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10334:3:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10339:2:4",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10330:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10330:12:4"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "10323:3:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_496e018b2c1f53adad34f0d5bb8485ac22f9993dc2ded520bf0e981bf3192bbb_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "10116:3:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "10124:3:4",
                            "type": ""
                          }
                        ],
                        "src": "9982:366:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10525:248:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10535:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10547:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10558:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10543:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10543:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10535:4:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10582:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10593:1:4",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10578:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10578:17:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "10601:4:4"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10607:9:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "10597:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10597:20:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10571:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10571:47:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10571:47:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10627:139:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "10761:4:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_496e018b2c1f53adad34f0d5bb8485ac22f9993dc2ded520bf0e981bf3192bbb_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10635:124:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10635:131:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10627:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_496e018b2c1f53adad34f0d5bb8485ac22f9993dc2ded520bf0e981bf3192bbb__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10505:9:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10520:4:4",
                            "type": ""
                          }
                        ],
                        "src": "10354:419:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10807:152:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10824:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10827:77:4",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10817:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10817:88:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10817:88:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10921:1:4",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10924:4:4",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10914:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10914:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10914:15:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10945:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10948:4:4",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "10938:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10938:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10938:15:4"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nodeType": "YulFunctionDefinition",
                        "src": "10779:180:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11071:133:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "11093:6:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11101:1:4",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11089:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11089:14:4"
                                  },
                                  {
                                    "hexValue": "4a7572792e6e6577446973707574653a206c697665206a757279206d656d6265",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11105:34:4",
                                    "type": "",
                                    "value": "Jury.newDispute: live jury membe"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11082:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11082:58:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11082:58:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "11161:6:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11169:2:4",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11157:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11157:15:4"
                                  },
                                  {
                                    "hexValue": "722063616e6e6f7420626520696e766f6c766564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11174:22:4",
                                    "type": "",
                                    "value": "r cannot be involved"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11150:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11150:47:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11150:47:4"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_430f6ef4fe4006807861843b861b357ab5a8b84e8d2d03d0f661c5bc819001f2",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "11063:6:4",
                            "type": ""
                          }
                        ],
                        "src": "10965:239:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11356:220:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11366:74:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11432:3:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11437:2:4",
                                    "type": "",
                                    "value": "52"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11373:58:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11373:67:4"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "11366:3:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11538:3:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_430f6ef4fe4006807861843b861b357ab5a8b84e8d2d03d0f661c5bc819001f2",
                                  "nodeType": "YulIdentifier",
                                  "src": "11449:88:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11449:93:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11449:93:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11551:19:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11562:3:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11567:2:4",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11558:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11558:12:4"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "11551:3:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_430f6ef4fe4006807861843b861b357ab5a8b84e8d2d03d0f661c5bc819001f2_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "11344:3:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "11352:3:4",
                            "type": ""
                          }
                        ],
                        "src": "11210:366:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11753:248:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11763:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11775:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11786:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11771:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11771:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11763:4:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11810:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11821:1:4",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11806:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11806:17:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "11829:4:4"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11835:9:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "11825:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11825:20:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11799:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11799:47:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11799:47:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11855:139:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "11989:4:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_430f6ef4fe4006807861843b861b357ab5a8b84e8d2d03d0f661c5bc819001f2_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11863:124:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11863:131:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11855:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_430f6ef4fe4006807861843b861b357ab5a8b84e8d2d03d0f661c5bc819001f2__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11733:9:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11748:4:4",
                            "type": ""
                          }
                        ],
                        "src": "11582:419:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12035:152:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12052:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12055:77:4",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12045:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12045:88:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12045:88:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12149:1:4",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12152:4:4",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12142:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12142:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12142:15:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12173:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12176:4:4",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "12166:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12166:15:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12166:15:4"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "12007:180:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12236:190:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12246:33:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "12273:5:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "12255:17:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12255:24:4"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "12246:5:4"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12369:22:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "12371:16:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12371:18:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12371:18:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "12294:5:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12301:66:4",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "12291:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12291:77:4"
                              },
                              "nodeType": "YulIf",
                              "src": "12288:103:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12400:20:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "12411:5:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12418:1:4",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12407:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12407:13:4"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "12400:3:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12222:5:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "12232:3:4",
                            "type": ""
                          }
                        ],
                        "src": "12193:233:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12538:70:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "12560:6:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12568:1:4",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12556:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12556:14:4"
                                  },
                                  {
                                    "hexValue": "63616c6c6572206d757374206265206a757279206d656d626572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12572:28:4",
                                    "type": "",
                                    "value": "caller must be jury member"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12549:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12549:52:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12549:52:4"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_64b2c92ce7fa731f5cae89967dcd7969508a11e3622a8d36c71fd5cf5f1ac1ee",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "12530:6:4",
                            "type": ""
                          }
                        ],
                        "src": "12432:176:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12760:220:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12770:74:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12836:3:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12841:2:4",
                                    "type": "",
                                    "value": "26"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12777:58:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12777:67:4"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "12770:3:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12942:3:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_64b2c92ce7fa731f5cae89967dcd7969508a11e3622a8d36c71fd5cf5f1ac1ee",
                                  "nodeType": "YulIdentifier",
                                  "src": "12853:88:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12853:93:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12853:93:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12955:19:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12966:3:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12971:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12962:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12962:12:4"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "12955:3:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_64b2c92ce7fa731f5cae89967dcd7969508a11e3622a8d36c71fd5cf5f1ac1ee_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "12748:3:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "12756:3:4",
                            "type": ""
                          }
                        ],
                        "src": "12614:366:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13157:248:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13167:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13179:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13190:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13175:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13175:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13167:4:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13214:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13225:1:4",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13210:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13210:17:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "13233:4:4"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13239:9:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "13229:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13229:20:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13203:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13203:47:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13203:47:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13259:139:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "13393:4:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_64b2c92ce7fa731f5cae89967dcd7969508a11e3622a8d36c71fd5cf5f1ac1ee_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "13267:124:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13267:131:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13259:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_64b2c92ce7fa731f5cae89967dcd7969508a11e3622a8d36c71fd5cf5f1ac1ee__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13137:9:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13152:4:4",
                            "type": ""
                          }
                        ],
                        "src": "12986:419:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13455:261:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13465:25:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "13488:1:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "13470:17:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13470:20:4"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "13465:1:4"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13499:25:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "13522:1:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "13504:17:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13504:20:4"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "13499:1:4"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "13662:22:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "13664:16:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13664:18:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "13664:18:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "13583:1:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13590:66:4",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                      },
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "13658:1:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "13586:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13586:74:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "13580:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13580:81:4"
                              },
                              "nodeType": "YulIf",
                              "src": "13577:107:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13694:16:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "13705:1:4"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "13708:1:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13701:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13701:9:4"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "13694:3:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "13442:1:4",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "13445:1:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "13451:3:4",
                            "type": ""
                          }
                        ],
                        "src": "13411:305:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13848:206:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13858:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13870:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13881:2:4",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13866:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13866:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13858:4:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "13938:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13951:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13962:1:4",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13947:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13947:17:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "13894:43:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13894:71:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13894:71:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "14019:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14032:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14043:2:4",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14028:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14028:18:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "13975:43:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13975:72:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13975:72:4"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13812:9:4",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "13824:6:4",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "13832:6:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13843:4:4",
                            "type": ""
                          }
                        ],
                        "src": "13722:332:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14105:146:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14115:25:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "14138:1:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "14120:17:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14120:20:4"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "14115:1:4"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14149:25:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "14172:1:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "14154:17:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14154:20:4"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "14149:1:4"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14196:22:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "14198:16:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14198:18:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14198:18:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "14190:1:4"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "14193:1:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "14187:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14187:8:4"
                              },
                              "nodeType": "YulIf",
                              "src": "14184:34:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14228:17:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "14240:1:4"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "14243:1:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "14236:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14236:9:4"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "14228:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "14091:1:4",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "14094:1:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "14100:4:4",
                            "type": ""
                          }
                        ],
                        "src": "14060:191:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14355:124:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14365:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14377:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14388:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14373:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14373:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14365:4:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "14445:6:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14458:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14469:1:4",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14454:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14454:17:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "14401:43:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14401:71:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14401:71:4"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14327:9:4",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "14339:6:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14350:4:4",
                            "type": ""
                          }
                        ],
                        "src": "14257:222:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14591:133:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "14613:6:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14621:1:4",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14609:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14609:14:4"
                                  },
                                  {
                                    "hexValue": "4a7572792e617070726f76654469737075746550726f706f73616c3a206a7572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14625:34:4",
                                    "type": "",
                                    "value": "Jury.approveDisputeProposal: jur"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14602:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14602:58:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14602:58:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "14681:6:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14689:2:4",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14677:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14677:15:4"
                                  },
                                  {
                                    "hexValue": "726f7220616c726561647920617070726f766564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14694:22:4",
                                    "type": "",
                                    "value": "ror already approved"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14670:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14670:47:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14670:47:4"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_f086086f7752b8525006d1e9f066ad7c93be0bccd319b472b9e14e2bccc06bef",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "14583:6:4",
                            "type": ""
                          }
                        ],
                        "src": "14485:239:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14876:220:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14886:74:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "14952:3:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14957:2:4",
                                    "type": "",
                                    "value": "52"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "14893:58:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14893:67:4"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "14886:3:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "15058:3:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_f086086f7752b8525006d1e9f066ad7c93be0bccd319b472b9e14e2bccc06bef",
                                  "nodeType": "YulIdentifier",
                                  "src": "14969:88:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14969:93:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14969:93:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15071:19:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "15082:3:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15087:2:4",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15078:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15078:12:4"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "15071:3:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_f086086f7752b8525006d1e9f066ad7c93be0bccd319b472b9e14e2bccc06bef_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "14864:3:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "14872:3:4",
                            "type": ""
                          }
                        ],
                        "src": "14730:366:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15273:248:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15283:26:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15295:9:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15306:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15291:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15291:18:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15283:4:4"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15330:9:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15341:1:4",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15326:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15326:17:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "15349:4:4"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15355:9:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "15345:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15345:20:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15319:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15319:47:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15319:47:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15375:139:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "15509:4:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_f086086f7752b8525006d1e9f066ad7c93be0bccd319b472b9e14e2bccc06bef_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "15383:124:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15383:131:4"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15375:4:4"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f086086f7752b8525006d1e9f066ad7c93be0bccd319b472b9e14e2bccc06bef__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15253:9:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "15268:4:4",
                            "type": ""
                          }
                        ],
                        "src": "15102:419:4"
                      }
                    ]
                  },
                  "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address_t_address_t_bool__to_t_uint256_t_uint256_t_uint256_t_address_t_address_t_bool__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_bool_t_uint256_t_address_t_address__to_t_bool_t_uint256_t_address_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1ea329905cdc51548905787a54f9ce8aa58c5ce64b9e5a44c2ee04616ffd3811(memPtr) {\n\n        mstore(add(memPtr, 0), \"caller must be jury pool member\")\n\n    }\n\n    function abi_encode_t_stringliteral_1ea329905cdc51548905787a54f9ce8aa58c5ce64b9e5a44c2ee04616ffd3811_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1ea329905cdc51548905787a54f9ce8aa58c5ce64b9e5a44c2ee04616ffd3811(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ea329905cdc51548905787a54f9ce8aa58c5ce64b9e5a44c2ee04616ffd3811__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ea329905cdc51548905787a54f9ce8aa58c5ce64b9e5a44c2ee04616ffd3811_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_496e018b2c1f53adad34f0d5bb8485ac22f9993dc2ded520bf0e981bf3192bbb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Jury.newDisputeSubmission: not e\")\n\n        mstore(add(memPtr, 32), \"nough approvals for dispute\")\n\n    }\n\n    function abi_encode_t_stringliteral_496e018b2c1f53adad34f0d5bb8485ac22f9993dc2ded520bf0e981bf3192bbb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 59)\n        store_literal_in_memory_496e018b2c1f53adad34f0d5bb8485ac22f9993dc2ded520bf0e981bf3192bbb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_496e018b2c1f53adad34f0d5bb8485ac22f9993dc2ded520bf0e981bf3192bbb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_496e018b2c1f53adad34f0d5bb8485ac22f9993dc2ded520bf0e981bf3192bbb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_430f6ef4fe4006807861843b861b357ab5a8b84e8d2d03d0f661c5bc819001f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Jury.newDispute: live jury membe\")\n\n        mstore(add(memPtr, 32), \"r cannot be involved\")\n\n    }\n\n    function abi_encode_t_stringliteral_430f6ef4fe4006807861843b861b357ab5a8b84e8d2d03d0f661c5bc819001f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_430f6ef4fe4006807861843b861b357ab5a8b84e8d2d03d0f661c5bc819001f2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_430f6ef4fe4006807861843b861b357ab5a8b84e8d2d03d0f661c5bc819001f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_430f6ef4fe4006807861843b861b357ab5a8b84e8d2d03d0f661c5bc819001f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_64b2c92ce7fa731f5cae89967dcd7969508a11e3622a8d36c71fd5cf5f1ac1ee(memPtr) {\n\n        mstore(add(memPtr, 0), \"caller must be jury member\")\n\n    }\n\n    function abi_encode_t_stringliteral_64b2c92ce7fa731f5cae89967dcd7969508a11e3622a8d36c71fd5cf5f1ac1ee_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_64b2c92ce7fa731f5cae89967dcd7969508a11e3622a8d36c71fd5cf5f1ac1ee(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_64b2c92ce7fa731f5cae89967dcd7969508a11e3622a8d36c71fd5cf5f1ac1ee__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_64b2c92ce7fa731f5cae89967dcd7969508a11e3622a8d36c71fd5cf5f1ac1ee_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_f086086f7752b8525006d1e9f066ad7c93be0bccd319b472b9e14e2bccc06bef(memPtr) {\n\n        mstore(add(memPtr, 0), \"Jury.approveDisputeProposal: jur\")\n\n        mstore(add(memPtr, 32), \"ror already approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_f086086f7752b8525006d1e9f066ad7c93be0bccd319b472b9e14e2bccc06bef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_f086086f7752b8525006d1e9f066ad7c93be0bccd319b472b9e14e2bccc06bef(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f086086f7752b8525006d1e9f066ad7c93be0bccd319b472b9e14e2bccc06bef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f086086f7752b8525006d1e9f066ad7c93be0bccd319b472b9e14e2bccc06bef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
                  "id": 4,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100f55760003560e01c806364ca6b1411610097578063c84663b011610066578063c84663b014610268578063cafd73b814610284578063d652ef1a1461028e578063e922de50146102be576100f5565b806364ca6b14146101f35780638be3056f1461020f57806390cf581c1461022b578063a94c8f3d14610235576100f5565b806341c12a70116100d357806341c12a7014610166578063564a565d14610170578063596d7b2f146101a55780635c975abb146101d5576100f5565b806301144f44146100fa57806312f373051461012e578063146f7b7f1461014a575b600080fd5b610114600480360381019061010f91906118e0565b6102da565b60405161012595949392919061198b565b60405180910390f35b610148600480360381019061014391906119de565b61035a565b005b610164600480360381019061015f9190611a37565b6104e5565b005b61016e610877565b005b61018a600480360381019061018591906119de565b610a24565b60405161019c96959493929190611a8a565b60405180910390f35b6101bf60048036038101906101ba91906119de565b610aad565b6040516101cc9190611aeb565b60405180910390f35b6101dd610acd565b6040516101ea9190611aeb565b60405180910390f35b61020d600480360381019061020891906119de565b610ae3565b005b61022960048036038101906102249190611c5f565b610b53565b005b610233610dbb565b005b61024f600480360381019061024a91906119de565b610f68565b60405161025f9493929190611ca8565b60405180910390f35b610282600480360381019061027d9190611ced565b610fe5565b005b61028c611222565b005b6102a860048036038101906102a39190611ced565b611224565b6040516102b59190611aeb565b60405180910390f35b6102d860048036038101906102d391906119de565b611244565b005b600860205281600052604060002081815481106102f657600080fd5b9060005260206000209060050201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166103e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103dd90611d77565b60405180910390fd5b600260066000838152602001908152602001600020600001805490501015610443576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043a90611e09565b60405180910390fd5b60006006600083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006006600084815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600660008581526020019081526020016000206002015490506104df83838361164f565b50505050565b6000600860006001548152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156105dd57838290600052602060002090600502016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff1615151515815250508152602001906001019061051c565b50505050905060005b81518110156106e4578473ffffffffffffffffffffffffffffffffffffffff1682828151811061061957610618611e29565b5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1614158061069257508373ffffffffffffffffffffffffffffffffffffffff1682828151811061066d5761066c611e29565b5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1614155b6106d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c890611eca565b60405180910390fd5b80806106dc90611f19565b9150506105e6565b506040518060a00160405280600067ffffffffffffffff81111561070b5761070a611b1c565b5b6040519080825280602002602001820160405280156107395781602001602082028036833780820191505090505b5081526020016000151581526020018381526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681525060066000600354815260200190815260200160002060008201518160000190805190602001906107b59291906117ef565b5060208201518160010160006101000a81548160ff0219169083151502179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505050505050565b6000600860006001548152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561096f57838290600052602060002090600502016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff161515151581525050815260200190600101906108ae565b50505050905060005b8151811015610a205781818151811061099457610993611e29565b5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0490611fae565b60405180910390fd5b8080610a1890611f19565b915050610978565b5050565b60056020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160149054906101000a900460ff16905086565b60096020528060005260406000206000915054906101000a900460ff1681565b60008060009054906101000a900460ff16905090565b600062015180600560008481526020019081526020016000206002016000828254610b0e9190611fce565b92505081905590507f4da9b675e578acf05cb72712fc12154fc303610a9bef918062e80e7b25aa045f8282604051610b47929190612024565b60405180910390a15050565b6001806000828254610b659190611fce565b92505081905550600160096000600154815260200190815260200160002060006101000a81548160ff02191690831515021790555060006009600060018054610bae919061204d565b815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600860006001548152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610ccb57838290600052602060002090600502016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff16151515158152505081526020019060010190610c0a565b50505050905060005b8251811015610d8757828181518110610cf057610cef611e29565b5b6020026020010151828281518110610d0b57610d0a611e29565b5b60200260200101516000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000828281518110610d5e57610d5d611e29565b5b602002602001015160800190151590811515815250508080610d7f90611f19565b915050610cd4565b506001547fc796ad74732d2a065b3161c4bf85138cb8d4b0561d078cc02aa237d2e29141db60405160405180910390a25050565b6000600860006001548152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610eb357838290600052602060002090600502016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff16151515158152505081526020019060010190610df2565b50505050905060005b8151811015610f6457818181518110610ed857610ed7611e29565b5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4890611fae565b60405180910390fd5b8080610f5c90611f19565b915050610ebc565b5050565b60066020528060005260406000206000915090508060010160009054906101000a900460ff16908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b6000600860006001548152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156110dd57838290600052602060002090600502016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff1615151515815250508152602001906001019061101c565b50505050905060005b815181101561118e5781818151811061110257611101611e29565b5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461117b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117290611fae565b60405180910390fd5b808061118690611f19565b9150506110e6565b506001600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f543fa957e48cddb9c78047c49b8227a327101433e6c106c5632530e20a46185c826040516112169190612081565b60405180910390a15050565b565b60076020528060005260406000206000915054906101000a900460ff1681565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166112d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c790611d77565b60405180910390fd5b60006006600083815260200190815260200160002060000180548060200260200160405190810160405280929190818152602001828054801561136857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161131e575b5050505050905060005b8151811015611417573373ffffffffffffffffffffffffffffffffffffffff168282815181106113a5576113a4611e29565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff161415611404576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113fb9061210e565b60405180910390fd5b808061140f90611f19565b915050611372565b5060066000838152602001908152602001600020600001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600660008481526020019081526020016000206040518060a00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561153457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116114ea575b505050505081526020016001820160009054906101000a900460ff16151515158152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060016006600085815260200190815260200160002060000180549050111561164a5761164981606001518260800151836040015161164f565b5b505050565b6001600260008282546116629190611fce565b925050819055506040518060c00160405280600154815260200160025481526020018281526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525060056000600254815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160040160146101000a81548160ff0219169083151502179055509050507f98d85359d4c56c7eaf2486712c329156c582a48e60b4188ba13a7afa45cfff326002546001546040516117e2929190612024565b60405180910390a1505050565b828054828255906000526020600020908101928215611868579160200282015b828111156118675782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061180f565b5b5090506118759190611879565b5090565b5b8082111561189257600081600090555060010161187a565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6118bd816118aa565b81146118c857600080fd5b50565b6000813590506118da816118b4565b92915050565b600080604083850312156118f7576118f66118a0565b5b6000611905858286016118cb565b9250506020611916858286016118cb565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061194b82611920565b9050919050565b61195b81611940565b82525050565b61196a816118aa565b82525050565b60008115159050919050565b61198581611970565b82525050565b600060a0820190506119a06000830188611952565b6119ad6020830187611961565b6119ba6040830186611961565b6119c76060830185611961565b6119d4608083018461197c565b9695505050505050565b6000602082840312156119f4576119f36118a0565b5b6000611a02848285016118cb565b91505092915050565b611a1481611940565b8114611a1f57600080fd5b50565b600081359050611a3181611a0b565b92915050565b600080600060608486031215611a5057611a4f6118a0565b5b6000611a5e86828701611a22565b9350506020611a6f86828701611a22565b9250506040611a80868287016118cb565b9150509250925092565b600060c082019050611a9f6000830189611961565b611aac6020830188611961565b611ab96040830187611961565b611ac66060830186611952565b611ad36080830185611952565b611ae060a083018461197c565b979650505050505050565b6000602082019050611b00600083018461197c565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611b5482611b0b565b810181811067ffffffffffffffff82111715611b7357611b72611b1c565b5b80604052505050565b6000611b86611896565b9050611b928282611b4b565b919050565b600067ffffffffffffffff821115611bb257611bb1611b1c565b5b602082029050602081019050919050565b600080fd5b6000611bdb611bd684611b97565b611b7c565b90508083825260208201905060208402830185811115611bfe57611bfd611bc3565b5b835b81811015611c275780611c138882611a22565b845260208401935050602081019050611c00565b5050509392505050565b600082601f830112611c4657611c45611b06565b5b8135611c56848260208601611bc8565b91505092915050565b600060208284031215611c7557611c746118a0565b5b600082013567ffffffffffffffff811115611c9357611c926118a5565b5b611c9f84828501611c31565b91505092915050565b6000608082019050611cbd600083018761197c565b611cca6020830186611961565b611cd76040830185611952565b611ce46060830184611952565b95945050505050565b600060208284031215611d0357611d026118a0565b5b6000611d1184828501611a22565b91505092915050565b600082825260208201905092915050565b7f63616c6c6572206d757374206265206a75727920706f6f6c206d656d62657200600082015250565b6000611d61601f83611d1a565b9150611d6c82611d2b565b602082019050919050565b60006020820190508181036000830152611d9081611d54565b9050919050565b7f4a7572792e6e6577446973707574655375626d697373696f6e3a206e6f74206560008201527f6e6f75676820617070726f76616c7320666f7220646973707574650000000000602082015250565b6000611df3603b83611d1a565b9150611dfe82611d97565b604082019050919050565b60006020820190508181036000830152611e2281611de6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4a7572792e6e6577446973707574653a206c697665206a757279206d656d626560008201527f722063616e6e6f7420626520696e766f6c766564000000000000000000000000602082015250565b6000611eb4603483611d1a565b9150611ebf82611e58565b604082019050919050565b60006020820190508181036000830152611ee381611ea7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f24826118aa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611f5757611f56611eea565b5b600182019050919050565b7f63616c6c6572206d757374206265206a757279206d656d626572000000000000600082015250565b6000611f98601a83611d1a565b9150611fa382611f62565b602082019050919050565b60006020820190508181036000830152611fc781611f8b565b9050919050565b6000611fd9826118aa565b9150611fe4836118aa565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561201957612018611eea565b5b828201905092915050565b60006040820190506120396000830185611961565b6120466020830184611961565b9392505050565b6000612058826118aa565b9150612063836118aa565b92508282101561207657612075611eea565b5b828203905092915050565b60006020820190506120966000830184611952565b92915050565b7f4a7572792e617070726f76654469737075746550726f706f73616c3a206a757260008201527f726f7220616c726561647920617070726f766564000000000000000000000000602082015250565b60006120f8603483611d1a565b91506121038261209c565b604082019050919050565b60006020820190508181036000830152612127816120eb565b905091905056fea2646970667358221220e2316627508d8a87e824b7f042299136906e64877155d400748603e8d784e6e364736f6c63430008090033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64CA6B14 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC84663B0 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC84663B0 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0xCAFD73B8 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xD652EF1A EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xE922DE50 EQ PUSH2 0x2BE JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x64CA6B14 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x8BE3056F EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x90CF581C EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA94C8F3D EQ PUSH2 0x235 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x41C12A70 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x41C12A70 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x564A565D EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x596D7B2F EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1D5 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x1144F44 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x12F37305 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x146F7B7F EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1A37 JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16E PUSH2 0x877 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1AEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH2 0xACD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x1AEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0xAE3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1C5F JUMP JUMPDEST PUSH2 0xB53 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x233 PUSH2 0xDBB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x282 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH2 0xFE5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28C PUSH2 0x1222 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x1AEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x19DE JUMP JUMPDEST PUSH2 0x1244 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP LT ISZERO PUSH2 0x443 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43A SWAP1 PUSH2 0x1E09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH2 0x4DF DUP4 DUP4 DUP4 PUSH2 0x164F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x5DD JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x51C JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x6E4 JUMPI DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x619 JUMPI PUSH2 0x618 PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x692 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x66D JUMPI PUSH2 0x66C PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x6D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C8 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x6DC SWAP1 PUSH2 0x1F19 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5E6 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x70B JUMPI PUSH2 0x70A PUSH2 0x1B1C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x739 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x7B5 SWAP3 SWAP2 SWAP1 PUSH2 0x17EF JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x96F JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x8AE JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xA20 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x994 JUMPI PUSH2 0x993 PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA04 SWAP1 PUSH2 0x1FAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0xA18 SWAP1 PUSH2 0x1F19 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x978 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15180 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB0E SWAP2 SWAP1 PUSH2 0x1FCE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE SWAP1 POP PUSH32 0x4DA9B675E578ACF05CB72712FC12154FC303610A9BEF918062E80E7B25AA045F DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xB47 SWAP3 SWAP2 SWAP1 PUSH2 0x2024 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB65 SWAP2 SWAP1 PUSH2 0x1FCE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD PUSH2 0xBAE SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xCCB JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xC0A JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xD87 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xCF0 JUMPI PUSH2 0xCEF PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD0B JUMPI PUSH2 0xD0A PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD5E JUMPI PUSH2 0xD5D PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x80 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0xD7F SWAP1 PUSH2 0x1F19 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCD4 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH32 0xC796AD74732D2A065B3161C4BF85138CB8D4B0561D078CC02AA237D2E29141DB PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xEB3 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xDF2 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xF64 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xED8 JUMPI PUSH2 0xED7 PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF48 SWAP1 PUSH2 0x1FAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0xF5C SWAP1 PUSH2 0x1F19 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEBC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x10DD JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x101C JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x118E JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1102 JUMPI PUSH2 0x1101 PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x117B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1172 SWAP1 PUSH2 0x1FAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x1186 SWAP1 PUSH2 0x1F19 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10E6 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x543FA957E48CDDB9C78047C49B8227A327101433E6C106C5632530E20A46185C DUP3 PUSH1 0x40 MLOAD PUSH2 0x1216 SWAP2 SWAP1 PUSH2 0x2081 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x12D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C7 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1368 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x131E JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1417 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x13A5 JUMPI PUSH2 0x13A4 PUSH2 0x1E29 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1404 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13FB SWAP1 PUSH2 0x210E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x140F SWAP1 PUSH2 0x1F19 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1372 JUMP JUMPDEST POP PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1534 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x14EA JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP GT ISZERO PUSH2 0x164A JUMPI PUSH2 0x1649 DUP2 PUSH1 0x60 ADD MLOAD DUP3 PUSH1 0x80 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x164F JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1662 SWAP2 SWAP1 PUSH2 0x1FCE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x98D85359D4C56C7EAF2486712C329156C582A48E60B4188BA13A7AFA45CFFF32 PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH2 0x17E2 SWAP3 SWAP2 SWAP1 PUSH2 0x2024 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1868 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1867 JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x180F JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1875 SWAP2 SWAP1 PUSH2 0x1879 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1892 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x187A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18BD DUP2 PUSH2 0x18AA JUMP JUMPDEST DUP2 EQ PUSH2 0x18C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18DA DUP2 PUSH2 0x18B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18F7 JUMPI PUSH2 0x18F6 PUSH2 0x18A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1905 DUP6 DUP3 DUP7 ADD PUSH2 0x18CB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1916 DUP6 DUP3 DUP7 ADD PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194B DUP3 PUSH2 0x1920 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x195B DUP2 PUSH2 0x1940 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x196A DUP2 PUSH2 0x18AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1985 DUP2 PUSH2 0x1970 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x19A0 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x19AD PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x19BA PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x19C7 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x19D4 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19F4 JUMPI PUSH2 0x19F3 PUSH2 0x18A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A02 DUP5 DUP3 DUP6 ADD PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A14 DUP2 PUSH2 0x1940 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A31 DUP2 PUSH2 0x1A0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A50 JUMPI PUSH2 0x1A4F PUSH2 0x18A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A5E DUP7 DUP3 DUP8 ADD PUSH2 0x1A22 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A6F DUP7 DUP3 DUP8 ADD PUSH2 0x1A22 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A80 DUP7 DUP3 DUP8 ADD PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1A9F PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x1AAC PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x1AB9 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x1AC6 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x1AD3 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x1AE0 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B00 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1B54 DUP3 PUSH2 0x1B0B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1B73 JUMPI PUSH2 0x1B72 PUSH2 0x1B1C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B86 PUSH2 0x1896 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B92 DUP3 DUP3 PUSH2 0x1B4B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BB2 JUMPI PUSH2 0x1BB1 PUSH2 0x1B1C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BDB PUSH2 0x1BD6 DUP5 PUSH2 0x1B97 JUMP JUMPDEST PUSH2 0x1B7C JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1BFE JUMPI PUSH2 0x1BFD PUSH2 0x1BC3 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C27 JUMPI DUP1 PUSH2 0x1C13 DUP9 DUP3 PUSH2 0x1A22 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C00 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C46 JUMPI PUSH2 0x1C45 PUSH2 0x1B06 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C56 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C75 JUMPI PUSH2 0x1C74 PUSH2 0x18A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C93 JUMPI PUSH2 0x1C92 PUSH2 0x18A5 JUMP JUMPDEST JUMPDEST PUSH2 0x1C9F DUP5 DUP3 DUP6 ADD PUSH2 0x1C31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1CBD PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1CCA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x1CD7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x1CE4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1952 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D03 JUMPI PUSH2 0x1D02 PUSH2 0x18A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D11 DUP5 DUP3 DUP6 ADD PUSH2 0x1A22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x63616C6C6572206D757374206265206A75727920706F6F6C206D656D62657200 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D61 PUSH1 0x1F DUP4 PUSH2 0x1D1A JUMP JUMPDEST SWAP2 POP PUSH2 0x1D6C DUP3 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D90 DUP2 PUSH2 0x1D54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4A7572792E6E6577446973707574655375626D697373696F6E3A206E6F742065 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6F75676820617070726F76616C7320666F7220646973707574650000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF3 PUSH1 0x3B DUP4 PUSH2 0x1D1A JUMP JUMPDEST SWAP2 POP PUSH2 0x1DFE DUP3 PUSH2 0x1D97 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E22 DUP2 PUSH2 0x1DE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4A7572792E6E6577446973707574653A206C697665206A757279206D656D6265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616E6E6F7420626520696E766F6C766564000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB4 PUSH1 0x34 DUP4 PUSH2 0x1D1A JUMP JUMPDEST SWAP2 POP PUSH2 0x1EBF DUP3 PUSH2 0x1E58 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EE3 DUP2 PUSH2 0x1EA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F24 DUP3 PUSH2 0x18AA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1F57 JUMPI PUSH2 0x1F56 PUSH2 0x1EEA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x63616C6C6572206D757374206265206A757279206D656D626572000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F98 PUSH1 0x1A DUP4 PUSH2 0x1D1A JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA3 DUP3 PUSH2 0x1F62 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FC7 DUP2 PUSH2 0x1F8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD9 DUP3 PUSH2 0x18AA JUMP JUMPDEST SWAP2 POP PUSH2 0x1FE4 DUP4 PUSH2 0x18AA JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2019 JUMPI PUSH2 0x2018 PUSH2 0x1EEA JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2039 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x2046 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1961 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2058 DUP3 PUSH2 0x18AA JUMP JUMPDEST SWAP2 POP PUSH2 0x2063 DUP4 PUSH2 0x18AA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2076 JUMPI PUSH2 0x2075 PUSH2 0x1EEA JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2096 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1952 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4A7572792E617070726F76654469737075746550726F706F73616C3A206A7572 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F7220616C726561647920617070726F766564000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F8 PUSH1 0x34 DUP4 PUSH2 0x1D1A JUMP JUMPDEST SWAP2 POP PUSH2 0x2103 DUP3 PUSH2 0x209C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2127 DUP2 PUSH2 0x20EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 BALANCE PUSH7 0x27508D8A87E824 0xB7 CREATE TIMESTAMP 0x29 SWAP2 CALLDATASIZE SWAP1 PUSH15 0x64877155D400748603E8D784E6E364 PUSH20 0x6F6C634300080900330000000000000000000000 ",
              "sourceMap": "185:5630:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;632:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;3480:571;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1736:765;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4399:44;;;:::i;:::-;;464:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;684:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1615:84:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4057:285:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4730:508;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4348:45;;;:::i;:::-;;513:59;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;4489:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4449:34;;;:::i;:::-;;579:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2507:967;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;632:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3480:571::-;1134:15;:27;1150:10;1134:27;;;;;;;;;;;;;;;;;;;;;;;;;1126:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3679:1:::1;3617:16;:36;3634:18;3617:36;;;;;;;;;;;:51;;:58;;;;:63;;3596:169;;;;;;;;;;;;:::i;:::-;;;;;;;;;3775:17;3795:16;:36;3812:18;3795:36;;;;;;;;;;;:46;;;;;;;;;;;;3775:66;;3851:17;3871:16;:36;3888:18;3871:36;;;;;;;;;;;:46;;;;;;;;;;;;3851:66;;3927:16;3946;:36;3963:18;3946:36;;;;;;;;;;;:45;;;3927:64;;4001:43;4013:9;4024;4035:8;4001:11;:43::i;:::-;3586:465;;;3480:571:::0;:::o;1736:765::-;1872:35;1910:6;:19;1917:11;;1910:19;;;;;;;;;;;1872:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1945:9;1940:299;1964:15;:22;1960:1;:26;1940:299;;;2065:10;2032:43;;:15;2048:1;2032:18;;;;;;;;:::i;:::-;;;;;;;;:29;;;:43;;;;:110;;;;2132:10;2099:43;;:15;2115:1;2099:18;;;;;;;;:::i;:::-;;;;;;;;:29;;;:43;;;;2032:110;2007:221;;;;;;;;;;;;:::i;:::-;;;;;;;;;1988:3;;;;;:::i;:::-;;;;1940:299;;;;2287:207;;;;;;;;2347:1;2333:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2287:207;;;;2375:5;2287:207;;;;;;2404:9;2287:207;;;;2438:10;2287:207;;;;;;2473:10;2287:207;;;;;2249:16;:35;2266:17;;2249:35;;;;;;;;;;;:245;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1862:639;1736:765;;;:::o;4399:44::-;790:35;828:6;:19;835:11;;828:19;;;;;;;;;;;790:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;862:9;857:206;881:15;:22;877:1;:26;857:206;;;963:15;979:1;963:18;;;;;;;;:::i;:::-;;;;;;;;:29;;;949:43;;:10;:43;;;924:128;;;;;;;;;;;;:::i;:::-;;;;;;;;;905:3;;;;;:::i;:::-;;;;857:206;;;;780:300;4399:44::o;464:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;684:42::-;;;;;;;;;;;;;;;;;;;;;;:::o;1615:84:0:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;4057:285:2:-;4181:19;305:5;4203:8;:20;4212:10;4203:20;;;;;;;;;;;:42;;;:68;;;;;;;:::i;:::-;;;;;;;4181:90;;4286:49;4311:10;4323:11;4286:49;;;;;;;:::i;:::-;;;;;;;;4117:225;4057:285;:::o;4730:508::-;4869:1;4854:11;;:16;;;;;;;:::i;:::-;;;;;;;;4906:4;4880:10;:23;4891:11;;4880:23;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;4950:5;4920:10;:27;4945:1;4931:11;;:15;;;;:::i;:::-;4920:27;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;4965:31;4999:6;:19;5006:11;;4999:19;;;;;;;;;;;4965:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5033:9;5028:159;5052:12;:19;5048:1;:23;5028:159;;;5120:12;5133:1;5120:15;;;;;;;;:::i;:::-;;;;;;;;5092:11;5104:1;5092:14;;;;;;;;:::i;:::-;;;;;;;;:25;;:43;;;;;;;;;;;5171:5;5149:11;5161:1;5149:14;;;;;;;;:::i;:::-;;;;;;;;:19;;:27;;;;;;;;;;;5073:3;;;;;:::i;:::-;;;;5028:159;;;;5219:11;;5201:30;;;;;;;;;;4791:447;4730:508;:::o;4348:45::-;790:35;828:6;:19;835:11;;828:19;;;;;;;;;;;790:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;862:9;857:206;881:15;:22;877:1;:26;857:206;;;963:15;979:1;963:18;;;;;;;;:::i;:::-;;;;;;;;:29;;;949:43;;:10;:43;;;924:128;;;;;;;;;;;;:::i;:::-;;;;;;;;;905:3;;;;;:::i;:::-;;;;857:206;;;;780:300;4348:45::o;513:59::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4489:166::-;790:35;828:6;:19;835:11;;828:19;;;;;;;;;;;790:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;862:9;857:206;881:15;:22;877:1;:26;857:206;;;963:15;979:1;963:18;;;;;;;;:::i;:::-;;;;;;;;:29;;;949:43;;:10;:43;;;924:128;;;;;;;;;;;;:::i;:::-;;;;;;;;;905:3;;;;;:::i;:::-;;;;857:206;;;;4600:4:::1;4570:15;:27;4586:10;4570:27;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;4619:29;4637:10;4619:29;;;;;;:::i;:::-;;;;;;;;780:300:::0;4489:166;:::o;4449:34::-;:::o;579:47::-;;;;;;;;;;;;;;;;;;;;;;:::o;2507:967::-;1134:15;:27;1150:10;1134:27;;;;;;;;;;;;;;;;;;;;;;;;;1126:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;2625:38:::1;2666:16;:58;2696:18;2666:58;;;;;;;;;;;:73;;2625:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2755:9;2750:233;2774:21;:28;2770:1;:32;2750:233;;;2876:10;2848:38;;:21;2870:1;2848:24;;;;;;;;:::i;:::-;;;;;;;;:38;;;;2823:149;;;;;;;;;;;;:::i;:::-;;;;;;;;;2804:3;;;;;:::i;:::-;;;;2750:233;;;;3035:16;:36;3052:18;3035:36;;;;;;;;;;;:51;;3092:10;3035:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3113:38;3154:16;:58;3184:18;3154:58;;;;;;;;;;;3113:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;3287:1;3226:16;:36;3243:18;3226:36;;;;;;;;;;;:51;;:58;;;;:62;3222:246;;;3304:153;3333:15;:25;;;3376:15;:25;;;3419:15;:24;;;3304:11;:153::i;:::-;3222:246;2615:859;;2507:967:::0;:::o;5275:448::-;5417:1;5404:9;;:14;;;;;;;:::i;:::-;;;;;;;;5450:217;;;;;;;;5480:11;;5450:217;;;;5516:9;;5450:217;;;;5549:9;5450:217;;;;5583:10;5450:217;;;;;;5618:10;5450:217;;;;;;5651:5;5450:217;;;;;5428:8;:19;5437:9;;5428:19;;;;;;;;;;;:239;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5682:34;5693:9;;5704:11;;5682:34;;;;;;;:::i;:::-;;;;;;;;5275:448;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:4:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:126::-;1207:7;1247:42;1240:5;1236:54;1225:65;;1170:126;;;:::o;1302:96::-;1339:7;1368:24;1386:5;1368:24;:::i;:::-;1357:35;;1302:96;;;:::o;1404:118::-;1491:24;1509:5;1491:24;:::i;:::-;1486:3;1479:37;1404:118;;:::o;1528:::-;1615:24;1633:5;1615:24;:::i;:::-;1610:3;1603:37;1528:118;;:::o;1652:90::-;1686:7;1729:5;1722:13;1715:21;1704:32;;1652:90;;;:::o;1748:109::-;1829:21;1844:5;1829:21;:::i;:::-;1824:3;1817:34;1748:109;;:::o;1863:652::-;2062:4;2100:3;2089:9;2085:19;2077:27;;2114:71;2182:1;2171:9;2167:17;2158:6;2114:71;:::i;:::-;2195:72;2263:2;2252:9;2248:18;2239:6;2195:72;:::i;:::-;2277;2345:2;2334:9;2330:18;2321:6;2277:72;:::i;:::-;2359;2427:2;2416:9;2412:18;2403:6;2359:72;:::i;:::-;2441:67;2503:3;2492:9;2488:19;2479:6;2441:67;:::i;:::-;1863:652;;;;;;;;:::o;2521:329::-;2580:6;2629:2;2617:9;2608:7;2604:23;2600:32;2597:119;;;2635:79;;:::i;:::-;2597:119;2755:1;2780:53;2825:7;2816:6;2805:9;2801:22;2780:53;:::i;:::-;2770:63;;2726:117;2521:329;;;;:::o;2856:122::-;2929:24;2947:5;2929:24;:::i;:::-;2922:5;2919:35;2909:63;;2968:1;2965;2958:12;2909:63;2856:122;:::o;2984:139::-;3030:5;3068:6;3055:20;3046:29;;3084:33;3111:5;3084:33;:::i;:::-;2984:139;;;;:::o;3129:619::-;3206:6;3214;3222;3271:2;3259:9;3250:7;3246:23;3242:32;3239:119;;;3277:79;;:::i;:::-;3239:119;3397:1;3422:53;3467:7;3458:6;3447:9;3443:22;3422:53;:::i;:::-;3412:63;;3368:117;3524:2;3550:53;3595:7;3586:6;3575:9;3571:22;3550:53;:::i;:::-;3540:63;;3495:118;3652:2;3678:53;3723:7;3714:6;3703:9;3699:22;3678:53;:::i;:::-;3668:63;;3623:118;3129:619;;;;;:::o;3754:763::-;3981:4;4019:3;4008:9;4004:19;3996:27;;4033:71;4101:1;4090:9;4086:17;4077:6;4033:71;:::i;:::-;4114:72;4182:2;4171:9;4167:18;4158:6;4114:72;:::i;:::-;4196;4264:2;4253:9;4249:18;4240:6;4196:72;:::i;:::-;4278;4346:2;4335:9;4331:18;4322:6;4278:72;:::i;:::-;4360:73;4428:3;4417:9;4413:19;4404:6;4360:73;:::i;:::-;4443:67;4505:3;4494:9;4490:19;4481:6;4443:67;:::i;:::-;3754:763;;;;;;;;;:::o;4523:210::-;4610:4;4648:2;4637:9;4633:18;4625:26;;4661:65;4723:1;4712:9;4708:17;4699:6;4661:65;:::i;:::-;4523:210;;;;:::o;4739:117::-;4848:1;4845;4838:12;4862:102;4903:6;4954:2;4950:7;4945:2;4938:5;4934:14;4930:28;4920:38;;4862:102;;;:::o;4970:180::-;5018:77;5015:1;5008:88;5115:4;5112:1;5105:15;5139:4;5136:1;5129:15;5156:281;5239:27;5261:4;5239:27;:::i;:::-;5231:6;5227:40;5369:6;5357:10;5354:22;5333:18;5321:10;5318:34;5315:62;5312:88;;;5380:18;;:::i;:::-;5312:88;5420:10;5416:2;5409:22;5199:238;5156:281;;:::o;5443:129::-;5477:6;5504:20;;:::i;:::-;5494:30;;5533:33;5561:4;5553:6;5533:33;:::i;:::-;5443:129;;;:::o;5578:311::-;5655:4;5745:18;5737:6;5734:30;5731:56;;;5767:18;;:::i;:::-;5731:56;5817:4;5809:6;5805:17;5797:25;;5877:4;5871;5867:15;5859:23;;5578:311;;;:::o;5895:117::-;6004:1;6001;5994:12;6035:710;6131:5;6156:81;6172:64;6229:6;6172:64;:::i;:::-;6156:81;:::i;:::-;6147:90;;6257:5;6286:6;6279:5;6272:21;6320:4;6313:5;6309:16;6302:23;;6373:4;6365:6;6361:17;6353:6;6349:30;6402:3;6394:6;6391:15;6388:122;;;6421:79;;:::i;:::-;6388:122;6536:6;6519:220;6553:6;6548:3;6545:15;6519:220;;;6628:3;6657:37;6690:3;6678:10;6657:37;:::i;:::-;6652:3;6645:50;6724:4;6719:3;6715:14;6708:21;;6595:144;6579:4;6574:3;6570:14;6563:21;;6519:220;;;6523:21;6137:608;;6035:710;;;;;:::o;6768:370::-;6839:5;6888:3;6881:4;6873:6;6869:17;6865:27;6855:122;;6896:79;;:::i;:::-;6855:122;7013:6;7000:20;7038:94;7128:3;7120:6;7113:4;7105:6;7101:17;7038:94;:::i;:::-;7029:103;;6845:293;6768:370;;;;:::o;7144:539::-;7228:6;7277:2;7265:9;7256:7;7252:23;7248:32;7245:119;;;7283:79;;:::i;:::-;7245:119;7431:1;7420:9;7416:17;7403:31;7461:18;7453:6;7450:30;7447:117;;;7483:79;;:::i;:::-;7447:117;7588:78;7658:7;7649:6;7638:9;7634:22;7588:78;:::i;:::-;7578:88;;7374:302;7144:539;;;;:::o;7689:541::-;7860:4;7898:3;7887:9;7883:19;7875:27;;7912:65;7974:1;7963:9;7959:17;7950:6;7912:65;:::i;:::-;7987:72;8055:2;8044:9;8040:18;8031:6;7987:72;:::i;:::-;8069;8137:2;8126:9;8122:18;8113:6;8069:72;:::i;:::-;8151;8219:2;8208:9;8204:18;8195:6;8151:72;:::i;:::-;7689:541;;;;;;;:::o;8236:329::-;8295:6;8344:2;8332:9;8323:7;8319:23;8315:32;8312:119;;;8350:79;;:::i;:::-;8312:119;8470:1;8495:53;8540:7;8531:6;8520:9;8516:22;8495:53;:::i;:::-;8485:63;;8441:117;8236:329;;;;:::o;8571:169::-;8655:11;8689:6;8684:3;8677:19;8729:4;8724:3;8720:14;8705:29;;8571:169;;;;:::o;8746:181::-;8886:33;8882:1;8874:6;8870:14;8863:57;8746:181;:::o;8933:366::-;9075:3;9096:67;9160:2;9155:3;9096:67;:::i;:::-;9089:74;;9172:93;9261:3;9172:93;:::i;:::-;9290:2;9285:3;9281:12;9274:19;;8933:366;;;:::o;9305:419::-;9471:4;9509:2;9498:9;9494:18;9486:26;;9558:9;9552:4;9548:20;9544:1;9533:9;9529:17;9522:47;9586:131;9712:4;9586:131;:::i;:::-;9578:139;;9305:419;;;:::o;9730:246::-;9870:34;9866:1;9858:6;9854:14;9847:58;9939:29;9934:2;9926:6;9922:15;9915:54;9730:246;:::o;9982:366::-;10124:3;10145:67;10209:2;10204:3;10145:67;:::i;:::-;10138:74;;10221:93;10310:3;10221:93;:::i;:::-;10339:2;10334:3;10330:12;10323:19;;9982:366;;;:::o;10354:419::-;10520:4;10558:2;10547:9;10543:18;10535:26;;10607:9;10601:4;10597:20;10593:1;10582:9;10578:17;10571:47;10635:131;10761:4;10635:131;:::i;:::-;10627:139;;10354:419;;;:::o;10779:180::-;10827:77;10824:1;10817:88;10924:4;10921:1;10914:15;10948:4;10945:1;10938:15;10965:239;11105:34;11101:1;11093:6;11089:14;11082:58;11174:22;11169:2;11161:6;11157:15;11150:47;10965:239;:::o;11210:366::-;11352:3;11373:67;11437:2;11432:3;11373:67;:::i;:::-;11366:74;;11449:93;11538:3;11449:93;:::i;:::-;11567:2;11562:3;11558:12;11551:19;;11210:366;;;:::o;11582:419::-;11748:4;11786:2;11775:9;11771:18;11763:26;;11835:9;11829:4;11825:20;11821:1;11810:9;11806:17;11799:47;11863:131;11989:4;11863:131;:::i;:::-;11855:139;;11582:419;;;:::o;12007:180::-;12055:77;12052:1;12045:88;12152:4;12149:1;12142:15;12176:4;12173:1;12166:15;12193:233;12232:3;12255:24;12273:5;12255:24;:::i;:::-;12246:33;;12301:66;12294:5;12291:77;12288:103;;;12371:18;;:::i;:::-;12288:103;12418:1;12411:5;12407:13;12400:20;;12193:233;;;:::o;12432:176::-;12572:28;12568:1;12560:6;12556:14;12549:52;12432:176;:::o;12614:366::-;12756:3;12777:67;12841:2;12836:3;12777:67;:::i;:::-;12770:74;;12853:93;12942:3;12853:93;:::i;:::-;12971:2;12966:3;12962:12;12955:19;;12614:366;;;:::o;12986:419::-;13152:4;13190:2;13179:9;13175:18;13167:26;;13239:9;13233:4;13229:20;13225:1;13214:9;13210:17;13203:47;13267:131;13393:4;13267:131;:::i;:::-;13259:139;;12986:419;;;:::o;13411:305::-;13451:3;13470:20;13488:1;13470:20;:::i;:::-;13465:25;;13504:20;13522:1;13504:20;:::i;:::-;13499:25;;13658:1;13590:66;13586:74;13583:1;13580:81;13577:107;;;13664:18;;:::i;:::-;13577:107;13708:1;13705;13701:9;13694:16;;13411:305;;;;:::o;13722:332::-;13843:4;13881:2;13870:9;13866:18;13858:26;;13894:71;13962:1;13951:9;13947:17;13938:6;13894:71;:::i;:::-;13975:72;14043:2;14032:9;14028:18;14019:6;13975:72;:::i;:::-;13722:332;;;;;:::o;14060:191::-;14100:4;14120:20;14138:1;14120:20;:::i;:::-;14115:25;;14154:20;14172:1;14154:20;:::i;:::-;14149:25;;14193:1;14190;14187:8;14184:34;;;14198:18;;:::i;:::-;14184:34;14243:1;14240;14236:9;14228:17;;14060:191;;;;:::o;14257:222::-;14350:4;14388:2;14377:9;14373:18;14365:26;;14401:71;14469:1;14458:9;14454:17;14445:6;14401:71;:::i;:::-;14257:222;;;;:::o;14485:239::-;14625:34;14621:1;14613:6;14609:14;14602:58;14694:22;14689:2;14681:6;14677:15;14670:47;14485:239;:::o;14730:366::-;14872:3;14893:67;14957:2;14952:3;14893:67;:::i;:::-;14886:74;;14969:93;15058:3;14969:93;:::i;:::-;15087:2;15082:3;15078:12;15071:19;;14730:366;;;:::o;15102:419::-;15268:4;15306:2;15295:9;15291:18;15283:26;;15355:9;15349:4;15345:20;15341:1;15330:9;15326:17;15319:47;15383:131;15509:4;15383:131;:::i;:::-;15375:139;;15102:419;;;:::o"
            },
            "methodIdentifiers": {
              "addJuryPoolMember(address)": "c84663b0",
              "approveDisputeProposal(uint256)": "e922de50",
              "disputeProposals(uint256)": "a94c8f3d",
              "disputes(uint256)": "564a565d",
              "extendDisputeDeadline(uint256)": "64ca6b14",
              "juries(uint256,uint256)": "01144f44",
              "juryIsLive(uint256)": "596d7b2f",
              "juryPoolMembers(address)": "d652ef1a",
              "newDisputeProposal(address,address,uint256)": "146f7b7f",
              "newDisputeSubmission(uint256)": "12f37305",
              "newLiveJury(address[])": "8be3056f",
              "paused()": "5c975abb",
              "setJuryType()": "cafd73b8",
              "voteNo()": "41c12a70",
              "voteYes()": "90cf581c"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_initialJuryMembers\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"juryId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDeadline\",\"type\":\"uint256\"}],\"name\":\"DisputeDeadlinePostponed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"verdict\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"juryId\",\"type\":\"uint256\"}],\"name\":\"DisputeResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"jurydId\",\"type\":\"uint256\"}],\"name\":\"JuryDutyCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"vote\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"juryMember\",\"type\":\"address\"}],\"name\":\"JuryMemberVoted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"juryId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"disputeId\",\"type\":\"uint256\"}],\"name\":\"NewDispute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"juryMemeber\",\"type\":\"address\"}],\"name\":\"NewJuryPoolMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"juryId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address[]\",\"name\":\"juryMemebers\",\"type\":\"address[]\"}],\"name\":\"NewLiveJury\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"juryMember\",\"type\":\"address\"}],\"name\":\"RemovedJuryMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newMember\",\"type\":\"address\"}],\"name\":\"addJuryPoolMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeProposalId\",\"type\":\"uint256\"}],\"name\":\"approveDisputeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"disputeProposals\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"plaintiff\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"defendent\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"disputes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"juryId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"disputeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"plaintiff\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"defendent\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"verdict\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeId\",\"type\":\"uint256\"}],\"name\":\"extendDisputeDeadline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"juries\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"memberAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"jurysParticipated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"disputesApproved\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"disputesResolved\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"vote\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"juryIsLive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"juryPoolMembers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_plaintiff\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_defendent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"newDisputeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeProposalId\",\"type\":\"uint256\"}],\"name\":\"newDisputeSubmission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_juryMembers\",\"type\":\"address[]\"}],\"name\":\"newLiveJury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setJuryType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteNo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteYes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"One jury per protocol\",\"kind\":\"dev\",\"methods\":{\"newLiveJury(address[])\":{\"details\":\"lock up jury members to specific jury id\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"setJuryType()\":{\"details\":\"majority rules or unanimous decision\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"disputes(uint256)\":{\"notice\":\"DATA STRUCTURES *\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Jury.sol\":\"Jury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/Jury.sol\":{\"keccak256\":\"0x8457aab4294b778c956f38005232906dce4d454426510323c2dc18164dc9e9bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05b262b2dbf7af462da0510ff0d5c7569ecbbdfdf52b8c92910702c862bcdd72\",\"dweb:/ipfs/QmZr79vJgW7xKJ3LXrn5ZvzeNxecPsT78eFvoch5Tgyebd\"]},\"contracts/interfaces/IJury.sol\":{\"keccak256\":\"0x104a0fffd8ff8385519b1119145ed4991706884873b97c555871db0ff79ed3f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b5296d843feec8ffc5d5314eed9a5662d498956783fd02b1e10f63749d2caf2\",\"dweb:/ipfs/QmPiCJAujnxwNNtCER4tPfAAqozbyezfBQrrHNtf61ZZMe\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 17,
                "contract": "contracts/Jury.sol:Jury",
                "label": "_paused",
                "offset": 0,
                "slot": "0",
                "type": "t_bool"
              },
              {
                "astId": 146,
                "contract": "contracts/Jury.sol:Jury",
                "label": "juryPointer",
                "offset": 0,
                "slot": "1",
                "type": "t_uint256"
              },
              {
                "astId": 148,
                "contract": "contracts/Jury.sol:Jury",
                "label": "disputeId",
                "offset": 0,
                "slot": "2",
                "type": "t_uint256"
              },
              {
                "astId": 150,
                "contract": "contracts/Jury.sol:Jury",
                "label": "disputeProposalId",
                "offset": 0,
                "slot": "3",
                "type": "t_uint256"
              },
              {
                "astId": 153,
                "contract": "contracts/Jury.sol:Jury",
                "label": "verdict",
                "offset": 0,
                "slot": "4",
                "type": "t_bool"
              },
              {
                "astId": 159,
                "contract": "contracts/Jury.sol:Jury",
                "label": "disputes",
                "offset": 0,
                "slot": "5",
                "type": "t_mapping(t_uint256,t_struct(Dispute)667_storage)"
              },
              {
                "astId": 164,
                "contract": "contracts/Jury.sol:Jury",
                "label": "disputeProposals",
                "offset": 0,
                "slot": "6",
                "type": "t_mapping(t_uint256,t_struct(DisputeProposal)654_storage)"
              },
              {
                "astId": 168,
                "contract": "contracts/Jury.sol:Jury",
                "label": "juryPoolMembers",
                "offset": 0,
                "slot": "7",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "astId": 174,
                "contract": "contracts/Jury.sol:Jury",
                "label": "juries",
                "offset": 0,
                "slot": "8",
                "type": "t_mapping(t_uint256,t_array(t_struct(JuryMember)642_storage)dyn_storage)"
              },
              {
                "astId": 178,
                "contract": "contracts/Jury.sol:Jury",
                "label": "juryIsLive",
                "offset": 0,
                "slot": "9",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
              },
              "t_array(t_struct(JuryMember)642_storage)dyn_storage": {
                "base": "t_struct(JuryMember)642_storage",
                "encoding": "dynamic_array",
                "label": "struct IJury.JuryMember[]",
                "numberOfBytes": "32"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_mapping(t_address,t_bool)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => bool)",
                "numberOfBytes": "32",
                "value": "t_bool"
              },
              "t_mapping(t_uint256,t_array(t_struct(JuryMember)642_storage)dyn_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => struct IJury.JuryMember[])",
                "numberOfBytes": "32",
                "value": "t_array(t_struct(JuryMember)642_storage)dyn_storage"
              },
              "t_mapping(t_uint256,t_bool)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => bool)",
                "numberOfBytes": "32",
                "value": "t_bool"
              },
              "t_mapping(t_uint256,t_struct(Dispute)667_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => struct IJury.Dispute)",
                "numberOfBytes": "32",
                "value": "t_struct(Dispute)667_storage"
              },
              "t_mapping(t_uint256,t_struct(DisputeProposal)654_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => struct IJury.DisputeProposal)",
                "numberOfBytes": "32",
                "value": "t_struct(DisputeProposal)654_storage"
              },
              "t_struct(Dispute)667_storage": {
                "encoding": "inplace",
                "label": "struct IJury.Dispute",
                "members": [
                  {
                    "astId": 656,
                    "contract": "contracts/Jury.sol:Jury",
                    "label": "juryId",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 658,
                    "contract": "contracts/Jury.sol:Jury",
                    "label": "disputeId",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 660,
                    "contract": "contracts/Jury.sol:Jury",
                    "label": "deadline",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 662,
                    "contract": "contracts/Jury.sol:Jury",
                    "label": "plaintiff",
                    "offset": 0,
                    "slot": "3",
                    "type": "t_address"
                  },
                  {
                    "astId": 664,
                    "contract": "contracts/Jury.sol:Jury",
                    "label": "defendent",
                    "offset": 0,
                    "slot": "4",
                    "type": "t_address"
                  },
                  {
                    "astId": 666,
                    "contract": "contracts/Jury.sol:Jury",
                    "label": "verdict",
                    "offset": 20,
                    "slot": "4",
                    "type": "t_bool"
                  }
                ],
                "numberOfBytes": "160"
              },
              "t_struct(DisputeProposal)654_storage": {
                "encoding": "inplace",
                "label": "struct IJury.DisputeProposal",
                "members": [
                  {
                    "astId": 645,
                    "contract": "contracts/Jury.sol:Jury",
                    "label": "approvedJurors",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_array(t_address)dyn_storage"
                  },
                  {
                    "astId": 647,
                    "contract": "contracts/Jury.sol:Jury",
                    "label": "isApproved",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_bool"
                  },
                  {
                    "astId": 649,
                    "contract": "contracts/Jury.sol:Jury",
                    "label": "deadline",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 651,
                    "contract": "contracts/Jury.sol:Jury",
                    "label": "plaintiff",
                    "offset": 0,
                    "slot": "3",
                    "type": "t_address"
                  },
                  {
                    "astId": 653,
                    "contract": "contracts/Jury.sol:Jury",
                    "label": "defendent",
                    "offset": 0,
                    "slot": "4",
                    "type": "t_address"
                  }
                ],
                "numberOfBytes": "160"
              },
              "t_struct(JuryMember)642_storage": {
                "encoding": "inplace",
                "label": "struct IJury.JuryMember",
                "members": [
                  {
                    "astId": 633,
                    "contract": "contracts/Jury.sol:Jury",
                    "label": "memberAddr",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_address"
                  },
                  {
                    "astId": 635,
                    "contract": "contracts/Jury.sol:Jury",
                    "label": "jurysParticipated",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 637,
                    "contract": "contracts/Jury.sol:Jury",
                    "label": "disputesApproved",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 639,
                    "contract": "contracts/Jury.sol:Jury",
                    "label": "disputesResolved",
                    "offset": 0,
                    "slot": "3",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 641,
                    "contract": "contracts/Jury.sol:Jury",
                    "label": "vote",
                    "offset": 0,
                    "slot": "4",
                    "type": "t_bool"
                  }
                ],
                "numberOfBytes": "160"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          }
        }
      },
      "contracts/interfaces/IJury.sol": {
        "IJury": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "juryId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newDeadline",
                  "type": "uint256"
                }
              ],
              "name": "DisputeDeadlinePostponed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "verdict",
                  "type": "bool"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "juryId",
                  "type": "uint256"
                }
              ],
              "name": "DisputeResolved",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "jurydId",
                  "type": "uint256"
                }
              ],
              "name": "JuryDutyCompleted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "vote",
                  "type": "bool"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "juryMember",
                  "type": "address"
                }
              ],
              "name": "JuryMemberVoted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "juryId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "disputeId",
                  "type": "uint256"
                }
              ],
              "name": "NewDispute",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "juryMemeber",
                  "type": "address"
                }
              ],
              "name": "NewJuryPoolMember",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "juryId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address[]",
                  "name": "juryMemebers",
                  "type": "address[]"
                }
              ],
              "name": "NewLiveJury",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "juryMember",
                  "type": "address"
                }
              ],
              "name": "RemovedJuryMember",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "setJuryType",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "setJuryType()": "cafd73b8"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"juryId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDeadline\",\"type\":\"uint256\"}],\"name\":\"DisputeDeadlinePostponed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"verdict\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"juryId\",\"type\":\"uint256\"}],\"name\":\"DisputeResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"jurydId\",\"type\":\"uint256\"}],\"name\":\"JuryDutyCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"vote\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"juryMember\",\"type\":\"address\"}],\"name\":\"JuryMemberVoted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"juryId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"disputeId\",\"type\":\"uint256\"}],\"name\":\"NewDispute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"juryMemeber\",\"type\":\"address\"}],\"name\":\"NewJuryPoolMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"juryId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address[]\",\"name\":\"juryMemebers\",\"type\":\"address[]\"}],\"name\":\"NewLiveJury\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"juryMember\",\"type\":\"address\"}],\"name\":\"RemovedJuryMember\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"setJuryType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"setJuryType()\":{\"details\":\"majority rules or unanimous decision\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IJury.sol\":\"IJury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IJury.sol\":{\"keccak256\":\"0x104a0fffd8ff8385519b1119145ed4991706884873b97c555871db0ff79ed3f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b5296d843feec8ffc5d5314eed9a5662d498956783fd02b1e10f63749d2caf2\",\"dweb:/ipfs/QmPiCJAujnxwNNtCER4tPfAAqozbyezfBQrrHNtf61ZZMe\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      }
    },
    "sources": {
      "@openzeppelin/contracts/security/Pausable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
          "exportedSymbols": {
            "Context": [
              129
            ],
            "Pausable": [
              107
            ]
          },
          "id": 108,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:23:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 2,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 108,
              "sourceUnit": 130,
              "src": "130:30:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 4,
                    "name": "Context",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 129,
                    "src": "632:7:0"
                  },
                  "id": 5,
                  "nodeType": "InheritanceSpecifier",
                  "src": "632:7:0"
                }
              ],
              "canonicalName": "Pausable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 3,
                "nodeType": "StructuredDocumentation",
                "src": "162:439:0",
                "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
              },
              "fullyImplemented": true,
              "id": 107,
              "linearizedBaseContracts": [
                107,
                129
              ],
              "name": "Pausable",
              "nameLocation": "620:8:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 6,
                    "nodeType": "StructuredDocumentation",
                    "src": "646:73:0",
                    "text": " @dev Emitted when the pause is triggered by `account`."
                  },
                  "id": 10,
                  "name": "Paused",
                  "nameLocation": "730:6:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 9,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 8,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "745:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "737:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 7,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "737:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "736:17:0"
                  },
                  "src": "724:30:0"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 11,
                    "nodeType": "StructuredDocumentation",
                    "src": "760:70:0",
                    "text": " @dev Emitted when the pause is lifted by `account`."
                  },
                  "id": 15,
                  "name": "Unpaused",
                  "nameLocation": "841:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 14,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 13,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "858:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 15,
                        "src": "850:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 12,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "850:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "849:17:0"
                  },
                  "src": "835:32:0"
                },
                {
                  "constant": false,
                  "id": 17,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nameLocation": "886:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "873:20:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "873:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 25,
                    "nodeType": "Block",
                    "src": "986:32:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 23,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 21,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "996:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 22,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1006:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "996:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 24,
                        "nodeType": "ExpressionStatement",
                        "src": "996:15:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 18,
                    "nodeType": "StructuredDocumentation",
                    "src": "900:67:0",
                    "text": " @dev Initializes the contract in unpaused state."
                  },
                  "id": 26,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 19,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "983:2:0"
                  },
                  "returnParameters": {
                    "id": 20,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "986:0:0"
                  },
                  "scope": 107,
                  "src": "972:46:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 33,
                    "nodeType": "Block",
                    "src": "1229:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 29,
                            "name": "_requireNotPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63,
                            "src": "1239:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 30,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1239:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31,
                        "nodeType": "ExpressionStatement",
                        "src": "1239:19:0"
                      },
                      {
                        "id": 32,
                        "nodeType": "PlaceholderStatement",
                        "src": "1268:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 27,
                    "nodeType": "StructuredDocumentation",
                    "src": "1024:175:0",
                    "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 34,
                  "name": "whenNotPaused",
                  "nameLocation": "1213:13:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1226:2:0"
                  },
                  "src": "1204:72:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 41,
                    "nodeType": "Block",
                    "src": "1476:44:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 37,
                            "name": "_requirePaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "1486:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 38,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1486:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 39,
                        "nodeType": "ExpressionStatement",
                        "src": "1486:16:0"
                      },
                      {
                        "id": 40,
                        "nodeType": "PlaceholderStatement",
                        "src": "1512:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 35,
                    "nodeType": "StructuredDocumentation",
                    "src": "1282:167:0",
                    "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 42,
                  "name": "whenPaused",
                  "nameLocation": "1463:10:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 36,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1473:2:0"
                  },
                  "src": "1454:66:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 50,
                    "nodeType": "Block",
                    "src": "1668:31:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 48,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "1685:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 47,
                        "id": 49,
                        "nodeType": "Return",
                        "src": "1678:14:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 43,
                    "nodeType": "StructuredDocumentation",
                    "src": "1526:84:0",
                    "text": " @dev Returns true if the contract is paused, and false otherwise."
                  },
                  "functionSelector": "5c975abb",
                  "id": 51,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "1624:6:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 44,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1630:2:0"
                  },
                  "returnParameters": {
                    "id": 47,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 46,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 51,
                        "src": "1662:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 45,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1662:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1661:6:0"
                  },
                  "scope": 107,
                  "src": "1615:84:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 62,
                    "nodeType": "Block",
                    "src": "1818:55:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 58,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "1836:9:0",
                              "subExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 56,
                                  "name": "paused",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51,
                                  "src": "1837:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                    "typeString": "function () view returns (bool)"
                                  }
                                },
                                "id": 57,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1837:8:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5061757361626c653a20706175736564",
                              "id": 59,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1847:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                                "typeString": "literal_string \"Pausable: paused\""
                              },
                              "value": "Pausable: paused"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                                "typeString": "literal_string \"Pausable: paused\""
                              }
                            ],
                            "id": 55,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1828:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1828:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 61,
                        "nodeType": "ExpressionStatement",
                        "src": "1828:38:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 52,
                    "nodeType": "StructuredDocumentation",
                    "src": "1705:57:0",
                    "text": " @dev Throws if the contract is paused."
                  },
                  "id": 63,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requireNotPaused",
                  "nameLocation": "1776:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 53,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1793:2:0"
                  },
                  "returnParameters": {
                    "id": 54,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1818:0:0"
                  },
                  "scope": 107,
                  "src": "1767:106:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 73,
                    "nodeType": "Block",
                    "src": "1993:58:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 68,
                                "name": "paused",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51,
                                "src": "2011:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                  "typeString": "function () view returns (bool)"
                                }
                              },
                              "id": 69,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2011:8:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5061757361626c653a206e6f7420706175736564",
                              "id": 70,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2021:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                                "typeString": "literal_string \"Pausable: not paused\""
                              },
                              "value": "Pausable: not paused"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                                "typeString": "literal_string \"Pausable: not paused\""
                              }
                            ],
                            "id": 67,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2003:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2003:41:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 72,
                        "nodeType": "ExpressionStatement",
                        "src": "2003:41:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 64,
                    "nodeType": "StructuredDocumentation",
                    "src": "1879:61:0",
                    "text": " @dev Throws if the contract is not paused."
                  },
                  "id": 74,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requirePaused",
                  "nameLocation": "1954:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 65,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1968:2:0"
                  },
                  "returnParameters": {
                    "id": 66,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1993:0:0"
                  },
                  "scope": 107,
                  "src": "1945:106:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 89,
                    "nodeType": "Block",
                    "src": "2235:66:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 80,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "2245:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 81,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2255:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2245:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 83,
                        "nodeType": "ExpressionStatement",
                        "src": "2245:14:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 85,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 119,
                                "src": "2281:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 86,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2281:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 84,
                            "name": "Paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "2274:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2274:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 88,
                        "nodeType": "EmitStatement",
                        "src": "2269:25:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 75,
                    "nodeType": "StructuredDocumentation",
                    "src": "2057:124:0",
                    "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 90,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 78,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 77,
                        "name": "whenNotPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 34,
                        "src": "2221:13:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2221:13:0"
                    }
                  ],
                  "name": "_pause",
                  "nameLocation": "2195:6:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 76,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2201:2:0"
                  },
                  "returnParameters": {
                    "id": 79,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2235:0:0"
                  },
                  "scope": 107,
                  "src": "2186:115:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 105,
                    "nodeType": "Block",
                    "src": "2481:69:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 96,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "2491:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 97,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2501:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2491:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 99,
                        "nodeType": "ExpressionStatement",
                        "src": "2491:15:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 101,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 119,
                                "src": "2530:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2530:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 100,
                            "name": "Unpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "2521:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2521:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 104,
                        "nodeType": "EmitStatement",
                        "src": "2516:27:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 91,
                    "nodeType": "StructuredDocumentation",
                    "src": "2307:121:0",
                    "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 106,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 94,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 93,
                        "name": "whenPaused",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 42,
                        "src": "2470:10:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2470:10:0"
                    }
                  ],
                  "name": "_unpause",
                  "nameLocation": "2442:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 92,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2450:2:0"
                  },
                  "returnParameters": {
                    "id": 95,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2481:0:0"
                  },
                  "scope": 107,
                  "src": "2433:117:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 108,
              "src": "602:1950:0",
              "usedErrors": []
            }
          ],
          "src": "105:2448:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              129
            ]
          },
          "id": 130,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 109,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "86:23:1"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 110,
                "nodeType": "StructuredDocumentation",
                "src": "111:496:1",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 129,
              "linearizedBaseContracts": [
                129
              ],
              "name": "Context",
              "nameLocation": "626:7:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 118,
                    "nodeType": "Block",
                    "src": "702:34:1",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 115,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "719:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "719:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 114,
                        "id": 117,
                        "nodeType": "Return",
                        "src": "712:17:1"
                      }
                    ]
                  },
                  "id": 119,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "649:10:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 111,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "659:2:1"
                  },
                  "returnParameters": {
                    "id": 114,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 113,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 119,
                        "src": "693:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 112,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "693:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "692:9:1"
                  },
                  "scope": 129,
                  "src": "640:96:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 127,
                    "nodeType": "Block",
                    "src": "809:32:1",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 124,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "826:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "826:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 123,
                        "id": 126,
                        "nodeType": "Return",
                        "src": "819:15:1"
                      }
                    ]
                  },
                  "id": 128,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "751:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 120,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "759:2:1"
                  },
                  "returnParameters": {
                    "id": 123,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 122,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "793:14:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 121,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "793:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "792:16:1"
                  },
                  "scope": 129,
                  "src": "742:99:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 130,
              "src": "608:235:1",
              "usedErrors": []
            }
          ],
          "src": "86:758:1"
        },
        "id": 1
      },
      "contracts/Jury.sol": {
        "ast": {
          "absolutePath": "contracts/Jury.sol",
          "exportedSymbols": {
            "Context": [
              129
            ],
            "IJury": [
              715
            ],
            "Jury": [
              629
            ],
            "Pausable": [
              107
            ]
          },
          "id": 630,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 131,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
              "file": "@openzeppelin/contracts/security/Pausable.sol",
              "id": 132,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 630,
              "sourceUnit": 108,
              "src": "57:55:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IJury.sol",
              "file": "./interfaces/IJury.sol",
              "id": 133,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 630,
              "sourceUnit": 716,
              "src": "113:32:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 135,
                    "name": "IJury",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 715,
                    "src": "202:5:2"
                  },
                  "id": 136,
                  "nodeType": "InheritanceSpecifier",
                  "src": "202:5:2"
                },
                {
                  "baseName": {
                    "id": 137,
                    "name": "Pausable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 107,
                    "src": "209:8:2"
                  },
                  "id": 138,
                  "nodeType": "InheritanceSpecifier",
                  "src": "209:8:2"
                }
              ],
              "canonicalName": "Jury",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 134,
                "nodeType": "StructuredDocumentation",
                "src": "147:37:2",
                "text": " @dev One jury per protocol"
              },
              "fullyImplemented": true,
              "id": 629,
              "linearizedBaseContracts": [
                629,
                107,
                129,
                715
              ],
              "name": "Jury",
              "nameLocation": "194:4:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 141,
                  "mutability": "constant",
                  "name": "minJurySize",
                  "nameLocation": "241:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 629,
                  "src": "224:33:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "224:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3130",
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "255:2:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10_by_1",
                      "typeString": "int_const 10"
                    },
                    "value": "10"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 144,
                  "mutability": "constant",
                  "name": "increaseDeadlineAmount",
                  "nameLocation": "280:22:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 629,
                  "src": "263:47:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "263:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3836343030",
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "305:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_86400_by_1",
                      "typeString": "int_const 86400"
                    },
                    "value": "86400"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 146,
                  "mutability": "mutable",
                  "name": "juryPointer",
                  "nameLocation": "325:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 629,
                  "src": "317:19:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "317:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 148,
                  "mutability": "mutable",
                  "name": "disputeId",
                  "nameLocation": "350:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 629,
                  "src": "342:17:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "342:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 150,
                  "mutability": "mutable",
                  "name": "disputeProposalId",
                  "nameLocation": "373:17:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 629,
                  "src": "365:25:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "365:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 151,
                    "nodeType": "StructuredDocumentation",
                    "src": "397:15:2",
                    "text": "STORAGE *"
                  },
                  "id": 153,
                  "mutability": "mutable",
                  "name": "verdict",
                  "nameLocation": "422:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 629,
                  "src": "417:12:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "417:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 154,
                    "nodeType": "StructuredDocumentation",
                    "src": "436:23:2",
                    "text": "DATA STRUCTURES *"
                  },
                  "functionSelector": "564a565d",
                  "id": 159,
                  "mutability": "mutable",
                  "name": "disputes",
                  "nameLocation": "499:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 629,
                  "src": "464:43:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Dispute_$667_storage_$",
                    "typeString": "mapping(uint256 => struct IJury.Dispute)"
                  },
                  "typeName": {
                    "id": 158,
                    "keyType": {
                      "id": 155,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "472:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "464:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Dispute_$667_storage_$",
                      "typeString": "mapping(uint256 => struct IJury.Dispute)"
                    },
                    "valueType": {
                      "id": 157,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 156,
                        "name": "Dispute",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 667,
                        "src": "483:7:2"
                      },
                      "referencedDeclaration": 667,
                      "src": "483:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dispute_$667_storage_ptr",
                        "typeString": "struct IJury.Dispute"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "a94c8f3d",
                  "id": 164,
                  "mutability": "mutable",
                  "name": "disputeProposals",
                  "nameLocation": "556:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 629,
                  "src": "513:59:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DisputeProposal_$654_storage_$",
                    "typeString": "mapping(uint256 => struct IJury.DisputeProposal)"
                  },
                  "typeName": {
                    "id": 163,
                    "keyType": {
                      "id": 160,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "521:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "513:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DisputeProposal_$654_storage_$",
                      "typeString": "mapping(uint256 => struct IJury.DisputeProposal)"
                    },
                    "valueType": {
                      "id": 162,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 161,
                        "name": "DisputeProposal",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 654,
                        "src": "532:15:2"
                      },
                      "referencedDeclaration": 654,
                      "src": "532:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DisputeProposal_$654_storage_ptr",
                        "typeString": "struct IJury.DisputeProposal"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "d652ef1a",
                  "id": 168,
                  "mutability": "mutable",
                  "name": "juryPoolMembers",
                  "nameLocation": "611:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 629,
                  "src": "579:47:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 167,
                    "keyType": {
                      "id": 165,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "587:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "579:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 166,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "598:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "01144f44",
                  "id": 174,
                  "mutability": "mutable",
                  "name": "juries",
                  "nameLocation": "672:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 629,
                  "src": "632:46:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_JuryMember_$642_storage_$dyn_storage_$",
                    "typeString": "mapping(uint256 => struct IJury.JuryMember[])"
                  },
                  "typeName": {
                    "id": 173,
                    "keyType": {
                      "id": 169,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "640:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "632:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_JuryMember_$642_storage_$dyn_storage_$",
                      "typeString": "mapping(uint256 => struct IJury.JuryMember[])"
                    },
                    "valueType": {
                      "baseType": {
                        "id": 171,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 170,
                          "name": "JuryMember",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 642,
                          "src": "651:10:2"
                        },
                        "referencedDeclaration": 642,
                        "src": "651:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_JuryMember_$642_storage_ptr",
                          "typeString": "struct IJury.JuryMember"
                        }
                      },
                      "id": 172,
                      "nodeType": "ArrayTypeName",
                      "src": "651:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_JuryMember_$642_storage_$dyn_storage_ptr",
                        "typeString": "struct IJury.JuryMember[]"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "596d7b2f",
                  "id": 178,
                  "mutability": "mutable",
                  "name": "juryIsLive",
                  "nameLocation": "716:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 629,
                  "src": "684:42:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                    "typeString": "mapping(uint256 => bool)"
                  },
                  "typeName": {
                    "id": 177,
                    "keyType": {
                      "id": 175,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "692:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "684:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                      "typeString": "mapping(uint256 => bool)"
                    },
                    "valueType": {
                      "id": 176,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "703:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 215,
                    "nodeType": "Block",
                    "src": "780:300:2",
                    "statements": [
                      {
                        "assignments": [
                          185
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 185,
                            "mutability": "mutable",
                            "name": "liveJuryMembers",
                            "nameLocation": "810:15:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 215,
                            "src": "790:35:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_JuryMember_$642_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct IJury.JuryMember[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 183,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 182,
                                  "name": "JuryMember",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 642,
                                  "src": "790:10:2"
                                },
                                "referencedDeclaration": 642,
                                "src": "790:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JuryMember_$642_storage_ptr",
                                  "typeString": "struct IJury.JuryMember"
                                }
                              },
                              "id": 184,
                              "nodeType": "ArrayTypeName",
                              "src": "790:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_JuryMember_$642_storage_$dyn_storage_ptr",
                                "typeString": "struct IJury.JuryMember[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 189,
                        "initialValue": {
                          "baseExpression": {
                            "id": 186,
                            "name": "juries",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 174,
                            "src": "828:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_JuryMember_$642_storage_$dyn_storage_$",
                              "typeString": "mapping(uint256 => struct IJury.JuryMember storage ref[] storage ref)"
                            }
                          },
                          "id": 188,
                          "indexExpression": {
                            "id": 187,
                            "name": "juryPointer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "835:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "828:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_JuryMember_$642_storage_$dyn_storage",
                            "typeString": "struct IJury.JuryMember storage ref[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "790:57:2"
                      },
                      {
                        "body": {
                          "id": 212,
                          "nodeType": "Block",
                          "src": "910:153:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 208,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 202,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "949:3:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 203,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "949:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 204,
                                          "name": "liveJuryMembers",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 185,
                                          "src": "963:15:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_JuryMember_$642_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct IJury.JuryMember memory[] memory"
                                          }
                                        },
                                        "id": 206,
                                        "indexExpression": {
                                          "id": 205,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 191,
                                          "src": "979:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "963:18:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_JuryMember_$642_memory_ptr",
                                          "typeString": "struct IJury.JuryMember memory"
                                        }
                                      },
                                      "id": 207,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "memberAddr",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 633,
                                      "src": "963:29:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "949:43:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "63616c6c6572206d757374206265206a757279206d656d626572",
                                    "id": 209,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1010:28:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_64b2c92ce7fa731f5cae89967dcd7969508a11e3622a8d36c71fd5cf5f1ac1ee",
                                      "typeString": "literal_string \"caller must be jury member\""
                                    },
                                    "value": "caller must be jury member"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_64b2c92ce7fa731f5cae89967dcd7969508a11e3622a8d36c71fd5cf5f1ac1ee",
                                      "typeString": "literal_string \"caller must be jury member\""
                                    }
                                  ],
                                  "id": 201,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "924:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "924:128:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 211,
                              "nodeType": "ExpressionStatement",
                              "src": "924:128:2"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 194,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 191,
                            "src": "877:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 195,
                              "name": "liveJuryMembers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 185,
                              "src": "881:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_JuryMember_$642_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct IJury.JuryMember memory[] memory"
                              }
                            },
                            "id": 196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "881:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "877:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 213,
                        "initializationExpression": {
                          "assignments": [
                            191
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 191,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "870:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 213,
                              "src": "862:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 190,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "862:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 193,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "874:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "862:13:2"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "905:3:2",
                            "subExpression": {
                              "id": 198,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 191,
                              "src": "905:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 200,
                          "nodeType": "ExpressionStatement",
                          "src": "905:3:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "857:206:2"
                      },
                      {
                        "id": 214,
                        "nodeType": "PlaceholderStatement",
                        "src": "1072:1:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 179,
                    "nodeType": "StructuredDocumentation",
                    "src": "733:16:2",
                    "text": "MODIFIER *"
                  },
                  "id": 216,
                  "name": "onlyJuryMember",
                  "nameLocation": "763:14:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 180,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "777:2:2"
                  },
                  "src": "754:326:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 227,
                    "nodeType": "Block",
                    "src": "1116:99:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 219,
                                "name": "juryPoolMembers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 168,
                                "src": "1134:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 222,
                              "indexExpression": {
                                "expression": {
                                  "id": 220,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1150:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 221,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1150:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1134:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "63616c6c6572206d757374206265206a75727920706f6f6c206d656d626572",
                              "id": 223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1163:33:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1ea329905cdc51548905787a54f9ce8aa58c5ce64b9e5a44c2ee04616ffd3811",
                                "typeString": "literal_string \"caller must be jury pool member\""
                              },
                              "value": "caller must be jury pool member"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1ea329905cdc51548905787a54f9ce8aa58c5ce64b9e5a44c2ee04616ffd3811",
                                "typeString": "literal_string \"caller must be jury pool member\""
                              }
                            ],
                            "id": 218,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1126:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1126:71:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 225,
                        "nodeType": "ExpressionStatement",
                        "src": "1126:71:2"
                      },
                      {
                        "id": 226,
                        "nodeType": "PlaceholderStatement",
                        "src": "1207:1:2"
                      }
                    ]
                  },
                  "id": 228,
                  "name": "onlyJuryPoolMember",
                  "nameLocation": "1095:18:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 217,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1113:2:2"
                  },
                  "src": "1086:129:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 279,
                    "nodeType": "Block",
                    "src": "1297:409:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 235,
                                  "name": "_initialJuryMembers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 231,
                                  "src": "1328:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 236,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "1328:26:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 237,
                                "name": "minJurySize",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 141,
                                "src": "1358:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1328:41:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4a7572792e636f6e7374727563746f723a206e6f7420656e6f756768206a757279206d656d62657273",
                              "id": 239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1383:43:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_83d7abbe591ba3b7619b193a9d3c4a954631bc95633b05d00456924ed9c0ea35",
                                "typeString": "literal_string \"Jury.constructor: not enough jury members\""
                              },
                              "value": "Jury.constructor: not enough jury members"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_83d7abbe591ba3b7619b193a9d3c4a954631bc95633b05d00456924ed9c0ea35",
                                "typeString": "literal_string \"Jury.constructor: not enough jury members\""
                              }
                            ],
                            "id": 234,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1307:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1307:129:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 241,
                        "nodeType": "ExpressionStatement",
                        "src": "1307:129:2"
                      },
                      {
                        "body": {
                          "id": 267,
                          "nodeType": "Block",
                          "src": "1503:131:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 259,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 253,
                                    "name": "juryPoolMembers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 168,
                                    "src": "1517:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 257,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 254,
                                      "name": "_initialJuryMembers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 231,
                                      "src": "1533:19:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 256,
                                    "indexExpression": {
                                      "id": 255,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 243,
                                      "src": "1553:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1533:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1517:39:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 258,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1559:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "1517:46:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 260,
                              "nodeType": "ExpressionStatement",
                              "src": "1517:46:2"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 262,
                                      "name": "_initialJuryMembers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 231,
                                      "src": "1600:19:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 264,
                                    "indexExpression": {
                                      "id": 263,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 243,
                                      "src": "1620:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1600:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 261,
                                  "name": "NewJuryPoolMember",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 678,
                                  "src": "1582:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 265,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1582:41:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 266,
                              "nodeType": "EmitStatement",
                              "src": "1577:46:2"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 246,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 243,
                            "src": "1466:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 247,
                              "name": "_initialJuryMembers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 231,
                              "src": "1470:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1470:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1466:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 268,
                        "initializationExpression": {
                          "assignments": [
                            243
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 243,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "1459:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 268,
                              "src": "1451:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 242,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1451:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 245,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1463:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1451:13:2"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "1498:3:2",
                            "subExpression": {
                              "id": 250,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 243,
                              "src": "1498:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 252,
                          "nodeType": "ExpressionStatement",
                          "src": "1498:3:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "1446:188:2"
                      },
                      {
                        "expression": {
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 269,
                            "name": "juryPointer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1643:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1658:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1643:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 272,
                        "nodeType": "ExpressionStatement",
                        "src": "1643:16:2"
                      },
                      {
                        "expression": {
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 273,
                              "name": "juryIsLive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 178,
                              "src": "1669:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 275,
                            "indexExpression": {
                              "id": 274,
                              "name": "juryPointer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 146,
                              "src": "1680:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1669:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1695:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1669:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 278,
                        "nodeType": "ExpressionStatement",
                        "src": "1669:30:2"
                      }
                    ]
                  },
                  "id": 280,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 232,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 231,
                        "mutability": "mutable",
                        "name": "_initialJuryMembers",
                        "nameLocation": "1276:19:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 280,
                        "src": "1259:36:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 229,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1259:7:2",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 230,
                          "nodeType": "ArrayTypeName",
                          "src": "1259:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1258:38:2"
                  },
                  "returnParameters": {
                    "id": 233,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1297:0:2"
                  },
                  "scope": 629,
                  "src": "1247:459:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 344,
                    "nodeType": "Block",
                    "src": "1862:639:2",
                    "statements": [
                      {
                        "assignments": [
                          293
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 293,
                            "mutability": "mutable",
                            "name": "liveJuryMembers",
                            "nameLocation": "1892:15:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 344,
                            "src": "1872:35:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_JuryMember_$642_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct IJury.JuryMember[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 291,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 290,
                                  "name": "JuryMember",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 642,
                                  "src": "1872:10:2"
                                },
                                "referencedDeclaration": 642,
                                "src": "1872:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JuryMember_$642_storage_ptr",
                                  "typeString": "struct IJury.JuryMember"
                                }
                              },
                              "id": 292,
                              "nodeType": "ArrayTypeName",
                              "src": "1872:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_JuryMember_$642_storage_$dyn_storage_ptr",
                                "typeString": "struct IJury.JuryMember[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 297,
                        "initialValue": {
                          "baseExpression": {
                            "id": 294,
                            "name": "juries",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 174,
                            "src": "1910:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_JuryMember_$642_storage_$dyn_storage_$",
                              "typeString": "mapping(uint256 => struct IJury.JuryMember storage ref[] storage ref)"
                            }
                          },
                          "id": 296,
                          "indexExpression": {
                            "id": 295,
                            "name": "juryPointer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1917:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1910:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_JuryMember_$642_storage_$dyn_storage",
                            "typeString": "struct IJury.JuryMember storage ref[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1872:57:2"
                      },
                      {
                        "body": {
                          "id": 326,
                          "nodeType": "Block",
                          "src": "1993:246:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 322,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "id": 315,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 310,
                                            "name": "liveJuryMembers",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 293,
                                            "src": "2032:15:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_JuryMember_$642_memory_ptr_$dyn_memory_ptr",
                                              "typeString": "struct IJury.JuryMember memory[] memory"
                                            }
                                          },
                                          "id": 312,
                                          "indexExpression": {
                                            "id": 311,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 299,
                                            "src": "2048:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "2032:18:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_JuryMember_$642_memory_ptr",
                                            "typeString": "struct IJury.JuryMember memory"
                                          }
                                        },
                                        "id": 313,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "memberAddr",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 633,
                                        "src": "2032:29:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "!=",
                                      "rightExpression": {
                                        "id": 314,
                                        "name": "_plaintiff",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 282,
                                        "src": "2065:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "2032:43:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "id": 321,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 316,
                                            "name": "liveJuryMembers",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 293,
                                            "src": "2099:15:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_JuryMember_$642_memory_ptr_$dyn_memory_ptr",
                                              "typeString": "struct IJury.JuryMember memory[] memory"
                                            }
                                          },
                                          "id": 318,
                                          "indexExpression": {
                                            "id": 317,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 299,
                                            "src": "2115:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "2099:18:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_JuryMember_$642_memory_ptr",
                                            "typeString": "struct IJury.JuryMember memory"
                                          }
                                        },
                                        "id": 319,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "memberAddr",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 633,
                                        "src": "2099:29:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "!=",
                                      "rightExpression": {
                                        "id": 320,
                                        "name": "_defendent",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 284,
                                        "src": "2132:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "2099:43:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "2032:110:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4a7572792e6e6577446973707574653a206c697665206a757279206d656d6265722063616e6e6f7420626520696e766f6c766564",
                                    "id": 323,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2160:54:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_430f6ef4fe4006807861843b861b357ab5a8b84e8d2d03d0f661c5bc819001f2",
                                      "typeString": "literal_string \"Jury.newDispute: live jury member cannot be involved\""
                                    },
                                    "value": "Jury.newDispute: live jury member cannot be involved"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_430f6ef4fe4006807861843b861b357ab5a8b84e8d2d03d0f661c5bc819001f2",
                                      "typeString": "literal_string \"Jury.newDispute: live jury member cannot be involved\""
                                    }
                                  ],
                                  "id": 309,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "2007:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 324,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2007:221:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 325,
                              "nodeType": "ExpressionStatement",
                              "src": "2007:221:2"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 302,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 299,
                            "src": "1960:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 303,
                              "name": "liveJuryMembers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 293,
                              "src": "1964:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_JuryMember_$642_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct IJury.JuryMember memory[] memory"
                              }
                            },
                            "id": 304,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1964:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1960:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 327,
                        "initializationExpression": {
                          "assignments": [
                            299
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 299,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "1953:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 327,
                              "src": "1945:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 298,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1945:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 301,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1957:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1945:13:2"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "1988:3:2",
                            "subExpression": {
                              "id": 306,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "1988:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 308,
                          "nodeType": "ExpressionStatement",
                          "src": "1988:3:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "1940:299:2"
                      },
                      {
                        "expression": {
                          "id": 342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 328,
                              "name": "disputeProposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "2249:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DisputeProposal_$654_storage_$",
                                "typeString": "mapping(uint256 => struct IJury.DisputeProposal storage ref)"
                              }
                            },
                            "id": 330,
                            "indexExpression": {
                              "id": 329,
                              "name": "disputeProposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150,
                              "src": "2266:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2249:35:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DisputeProposal_$654_storage",
                              "typeString": "struct IJury.DisputeProposal storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 335,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2347:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 334,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "2333:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (address[] memory)"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 332,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2337:7:2",
                                      "stateMutability": "nonpayable",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 333,
                                    "nodeType": "ArrayTypeName",
                                    "src": "2337:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[]"
                                    }
                                  }
                                },
                                "id": 336,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2333:16:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              {
                                "hexValue": "66616c7365",
                                "id": 337,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2375:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "id": 338,
                                "name": "_deadline",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 286,
                                "src": "2404:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 339,
                                "name": "_plaintiff",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 282,
                                "src": "2438:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 340,
                                "name": "_defendent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 284,
                                "src": "2473:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 331,
                              "name": "DisputeProposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 654,
                              "src": "2287:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_DisputeProposal_$654_storage_ptr_$",
                                "typeString": "type(struct IJury.DisputeProposal storage pointer)"
                              }
                            },
                            "id": 341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "approvedJurors",
                              "isApproved",
                              "deadline",
                              "plaintiff",
                              "defendent"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "2287:207:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DisputeProposal_$654_memory_ptr",
                              "typeString": "struct IJury.DisputeProposal memory"
                            }
                          },
                          "src": "2249:245:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DisputeProposal_$654_storage",
                            "typeString": "struct IJury.DisputeProposal storage ref"
                          }
                        },
                        "id": 343,
                        "nodeType": "ExpressionStatement",
                        "src": "2249:245:2"
                      }
                    ]
                  },
                  "functionSelector": "146f7b7f",
                  "id": 345,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "newDisputeProposal",
                  "nameLocation": "1745:18:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 287,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 282,
                        "mutability": "mutable",
                        "name": "_plaintiff",
                        "nameLocation": "1781:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1773:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 281,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1773:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 284,
                        "mutability": "mutable",
                        "name": "_defendent",
                        "nameLocation": "1809:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1801:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 283,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1801:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 286,
                        "mutability": "mutable",
                        "name": "_deadline",
                        "nameLocation": "1837:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1829:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 285,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1829:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1763:89:2"
                  },
                  "returnParameters": {
                    "id": 288,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1862:0:2"
                  },
                  "scope": 629,
                  "src": "1736:765:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 419,
                    "nodeType": "Block",
                    "src": "2615:859:2",
                    "statements": [
                      {
                        "assignments": [
                          356
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 356,
                            "mutability": "mutable",
                            "name": "currentApprovedJurors",
                            "nameLocation": "2642:21:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 419,
                            "src": "2625:38:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 354,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2625:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 355,
                              "nodeType": "ArrayTypeName",
                              "src": "2625:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 361,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 357,
                              "name": "disputeProposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "2666:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DisputeProposal_$654_storage_$",
                                "typeString": "mapping(uint256 => struct IJury.DisputeProposal storage ref)"
                              }
                            },
                            "id": 359,
                            "indexExpression": {
                              "id": 358,
                              "name": "_disputeProposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 347,
                              "src": "2696:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2666:58:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DisputeProposal_$654_storage",
                              "typeString": "struct IJury.DisputeProposal storage ref"
                            }
                          },
                          "id": 360,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approvedJurors",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 645,
                          "src": "2666:73:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2625:114:2"
                      },
                      {
                        "body": {
                          "id": 383,
                          "nodeType": "Block",
                          "src": "2809:174:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 379,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 374,
                                        "name": "currentApprovedJurors",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 356,
                                        "src": "2848:21:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 376,
                                      "indexExpression": {
                                        "id": 375,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 363,
                                        "src": "2870:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2848:24:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 377,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "2876:3:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 378,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "2876:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "2848:38:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4a7572792e617070726f76654469737075746550726f706f73616c3a206a7572726f7220616c726561647920617070726f766564",
                                    "id": 380,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2904:54:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_f086086f7752b8525006d1e9f066ad7c93be0bccd319b472b9e14e2bccc06bef",
                                      "typeString": "literal_string \"Jury.approveDisputeProposal: jurror already approved\""
                                    },
                                    "value": "Jury.approveDisputeProposal: jurror already approved"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_f086086f7752b8525006d1e9f066ad7c93be0bccd319b472b9e14e2bccc06bef",
                                      "typeString": "literal_string \"Jury.approveDisputeProposal: jurror already approved\""
                                    }
                                  ],
                                  "id": 373,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "2823:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 381,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2823:149:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 382,
                              "nodeType": "ExpressionStatement",
                              "src": "2823:149:2"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 366,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 363,
                            "src": "2770:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 367,
                              "name": "currentApprovedJurors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 356,
                              "src": "2774:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2774:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2770:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 384,
                        "initializationExpression": {
                          "assignments": [
                            363
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 363,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "2763:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 384,
                              "src": "2755:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 362,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2755:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 365,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2767:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2755:13:2"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "2804:3:2",
                            "subExpression": {
                              "id": 370,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 363,
                              "src": "2804:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 372,
                          "nodeType": "ExpressionStatement",
                          "src": "2804:3:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "2750:233:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 390,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3092:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 391,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3092:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 385,
                                  "name": "disputeProposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 164,
                                  "src": "3035:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DisputeProposal_$654_storage_$",
                                    "typeString": "mapping(uint256 => struct IJury.DisputeProposal storage ref)"
                                  }
                                },
                                "id": 387,
                                "indexExpression": {
                                  "id": 386,
                                  "name": "_disputeProposalId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 347,
                                  "src": "3052:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3035:36:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DisputeProposal_$654_storage",
                                  "typeString": "struct IJury.DisputeProposal storage ref"
                                }
                              },
                              "id": 388,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "approvedJurors",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 645,
                              "src": "3035:51:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3035:56:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3035:68:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 393,
                        "nodeType": "ExpressionStatement",
                        "src": "3035:68:2"
                      },
                      {
                        "assignments": [
                          396
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 396,
                            "mutability": "mutable",
                            "name": "disputeProposal",
                            "nameLocation": "3136:15:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 419,
                            "src": "3113:38:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DisputeProposal_$654_memory_ptr",
                              "typeString": "struct IJury.DisputeProposal"
                            },
                            "typeName": {
                              "id": 395,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 394,
                                "name": "DisputeProposal",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 654,
                                "src": "3113:15:2"
                              },
                              "referencedDeclaration": 654,
                              "src": "3113:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DisputeProposal_$654_storage_ptr",
                                "typeString": "struct IJury.DisputeProposal"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 400,
                        "initialValue": {
                          "baseExpression": {
                            "id": 397,
                            "name": "disputeProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 164,
                            "src": "3154:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DisputeProposal_$654_storage_$",
                              "typeString": "mapping(uint256 => struct IJury.DisputeProposal storage ref)"
                            }
                          },
                          "id": 399,
                          "indexExpression": {
                            "id": 398,
                            "name": "_disputeProposalId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 347,
                            "src": "3184:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3154:58:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DisputeProposal_$654_storage",
                            "typeString": "struct IJury.DisputeProposal storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3113:99:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 401,
                                  "name": "disputeProposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 164,
                                  "src": "3226:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DisputeProposal_$654_storage_$",
                                    "typeString": "mapping(uint256 => struct IJury.DisputeProposal storage ref)"
                                  }
                                },
                                "id": 403,
                                "indexExpression": {
                                  "id": 402,
                                  "name": "_disputeProposalId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 347,
                                  "src": "3243:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3226:36:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DisputeProposal_$654_storage",
                                  "typeString": "struct IJury.DisputeProposal storage ref"
                                }
                              },
                              "id": 404,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "approvedJurors",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 645,
                              "src": "3226:51:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3226:58:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3287:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3226:62:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 418,
                        "nodeType": "IfStatement",
                        "src": "3222:246:2",
                        "trueBody": {
                          "id": 417,
                          "nodeType": "Block",
                          "src": "3290:178:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 409,
                                      "name": "disputeProposal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 396,
                                      "src": "3333:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_DisputeProposal_$654_memory_ptr",
                                        "typeString": "struct IJury.DisputeProposal memory"
                                      }
                                    },
                                    "id": 410,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "plaintiff",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 651,
                                    "src": "3333:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 411,
                                      "name": "disputeProposal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 396,
                                      "src": "3376:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_DisputeProposal_$654_memory_ptr",
                                        "typeString": "struct IJury.DisputeProposal memory"
                                      }
                                    },
                                    "id": 412,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "defendent",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 653,
                                    "src": "3376:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 413,
                                      "name": "disputeProposal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 396,
                                      "src": "3419:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_DisputeProposal_$654_memory_ptr",
                                        "typeString": "struct IJury.DisputeProposal memory"
                                      }
                                    },
                                    "id": 414,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "deadline",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 649,
                                    "src": "3419:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 408,
                                  "name": "_newDispute",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 620,
                                  "src": "3304:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 415,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3304:153:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 416,
                              "nodeType": "ExpressionStatement",
                              "src": "3304:153:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "e922de50",
                  "id": 420,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 350,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 349,
                        "name": "onlyJuryPoolMember",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 228,
                        "src": "2592:18:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2592:18:2"
                    }
                  ],
                  "name": "approveDisputeProposal",
                  "nameLocation": "2516:22:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 348,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 347,
                        "mutability": "mutable",
                        "name": "_disputeProposalId",
                        "nameLocation": "2547:18:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 420,
                        "src": "2539:26:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 346,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2539:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2538:28:2"
                  },
                  "returnParameters": {
                    "id": 351,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2615:0:2"
                  },
                  "scope": 629,
                  "src": "2507:967:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 465,
                    "nodeType": "Block",
                    "src": "3586:465:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 434,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 428,
                                      "name": "disputeProposals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 164,
                                      "src": "3617:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DisputeProposal_$654_storage_$",
                                        "typeString": "mapping(uint256 => struct IJury.DisputeProposal storage ref)"
                                      }
                                    },
                                    "id": 430,
                                    "indexExpression": {
                                      "id": 429,
                                      "name": "_disputeProposalId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 422,
                                      "src": "3634:18:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3617:36:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_DisputeProposal_$654_storage",
                                      "typeString": "struct IJury.DisputeProposal storage ref"
                                    }
                                  },
                                  "id": 431,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "approvedJurors",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 645,
                                  "src": "3617:51:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 432,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "3617:58:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3679:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "3617:63:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4a7572792e6e6577446973707574655375626d697373696f6e3a206e6f7420656e6f75676820617070726f76616c7320666f722064697370757465",
                              "id": 435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3694:61:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_496e018b2c1f53adad34f0d5bb8485ac22f9993dc2ded520bf0e981bf3192bbb",
                                "typeString": "literal_string \"Jury.newDisputeSubmission: not enough approvals for dispute\""
                              },
                              "value": "Jury.newDisputeSubmission: not enough approvals for dispute"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_496e018b2c1f53adad34f0d5bb8485ac22f9993dc2ded520bf0e981bf3192bbb",
                                "typeString": "literal_string \"Jury.newDisputeSubmission: not enough approvals for dispute\""
                              }
                            ],
                            "id": 427,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3596:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3596:169:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 437,
                        "nodeType": "ExpressionStatement",
                        "src": "3596:169:2"
                      },
                      {
                        "assignments": [
                          439
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 439,
                            "mutability": "mutable",
                            "name": "plaintiff",
                            "nameLocation": "3783:9:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 465,
                            "src": "3775:17:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 438,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3775:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 444,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 440,
                              "name": "disputeProposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "3795:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DisputeProposal_$654_storage_$",
                                "typeString": "mapping(uint256 => struct IJury.DisputeProposal storage ref)"
                              }
                            },
                            "id": 442,
                            "indexExpression": {
                              "id": 441,
                              "name": "_disputeProposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 422,
                              "src": "3812:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3795:36:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DisputeProposal_$654_storage",
                              "typeString": "struct IJury.DisputeProposal storage ref"
                            }
                          },
                          "id": 443,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "plaintiff",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 651,
                          "src": "3795:46:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3775:66:2"
                      },
                      {
                        "assignments": [
                          446
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 446,
                            "mutability": "mutable",
                            "name": "defendent",
                            "nameLocation": "3859:9:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 465,
                            "src": "3851:17:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 445,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3851:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 451,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 447,
                              "name": "disputeProposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "3871:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DisputeProposal_$654_storage_$",
                                "typeString": "mapping(uint256 => struct IJury.DisputeProposal storage ref)"
                              }
                            },
                            "id": 449,
                            "indexExpression": {
                              "id": 448,
                              "name": "_disputeProposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 422,
                              "src": "3888:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3871:36:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DisputeProposal_$654_storage",
                              "typeString": "struct IJury.DisputeProposal storage ref"
                            }
                          },
                          "id": 450,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "defendent",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 653,
                          "src": "3871:46:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3851:66:2"
                      },
                      {
                        "assignments": [
                          453
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 453,
                            "mutability": "mutable",
                            "name": "deadline",
                            "nameLocation": "3935:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 465,
                            "src": "3927:16:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 452,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3927:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 458,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 454,
                              "name": "disputeProposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "3946:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DisputeProposal_$654_storage_$",
                                "typeString": "mapping(uint256 => struct IJury.DisputeProposal storage ref)"
                              }
                            },
                            "id": 456,
                            "indexExpression": {
                              "id": 455,
                              "name": "_disputeProposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 422,
                              "src": "3963:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3946:36:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DisputeProposal_$654_storage",
                              "typeString": "struct IJury.DisputeProposal storage ref"
                            }
                          },
                          "id": 457,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deadline",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 649,
                          "src": "3946:45:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3927:64:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 460,
                              "name": "plaintiff",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 439,
                              "src": "4013:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 461,
                              "name": "defendent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 446,
                              "src": "4024:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 462,
                              "name": "deadline",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 453,
                              "src": "4035:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 459,
                            "name": "_newDispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 620,
                            "src": "4001:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4001:43:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 464,
                        "nodeType": "ExpressionStatement",
                        "src": "4001:43:2"
                      }
                    ]
                  },
                  "functionSelector": "12f37305",
                  "id": 466,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 425,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 424,
                        "name": "onlyJuryPoolMember",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 228,
                        "src": "3563:18:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3563:18:2"
                    }
                  ],
                  "name": "newDisputeSubmission",
                  "nameLocation": "3489:20:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 423,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 422,
                        "mutability": "mutable",
                        "name": "_disputeProposalId",
                        "nameLocation": "3518:18:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 466,
                        "src": "3510:26:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 421,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3510:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3509:28:2"
                  },
                  "returnParameters": {
                    "id": 426,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3586:0:2"
                  },
                  "scope": 629,
                  "src": "3480:571:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 485,
                    "nodeType": "Block",
                    "src": "4117:225:2",
                    "statements": [
                      {
                        "assignments": [
                          472
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 472,
                            "mutability": "mutable",
                            "name": "newDeadline",
                            "nameLocation": "4189:11:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 485,
                            "src": "4181:19:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 471,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4181:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 479,
                        "initialValue": {
                          "id": 478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 473,
                                "name": "disputes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 159,
                                "src": "4203:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Dispute_$667_storage_$",
                                  "typeString": "mapping(uint256 => struct IJury.Dispute storage ref)"
                                }
                              },
                              "id": 475,
                              "indexExpression": {
                                "id": 474,
                                "name": "_disputeId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 468,
                                "src": "4212:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4203:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dispute_$667_storage",
                                "typeString": "struct IJury.Dispute storage ref"
                              }
                            },
                            "id": 476,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "deadline",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 660,
                            "src": "4203:42:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 477,
                            "name": "increaseDeadlineAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 144,
                            "src": "4249:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4203:68:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4181:90:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 481,
                              "name": "_disputeId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 468,
                              "src": "4311:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 482,
                              "name": "newDeadline",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 472,
                              "src": "4323:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 480,
                            "name": "DisputeDeadlinePostponed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 698,
                            "src": "4286:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4286:49:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 484,
                        "nodeType": "EmitStatement",
                        "src": "4281:54:2"
                      }
                    ]
                  },
                  "functionSelector": "64ca6b14",
                  "id": 486,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "extendDisputeDeadline",
                  "nameLocation": "4066:21:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 469,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 468,
                        "mutability": "mutable",
                        "name": "_disputeId",
                        "nameLocation": "4096:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 486,
                        "src": "4088:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 467,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4088:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4087:20:2"
                  },
                  "returnParameters": {
                    "id": 470,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4117:0:2"
                  },
                  "scope": 629,
                  "src": "4057:285:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 491,
                    "nodeType": "Block",
                    "src": "4391:2:2",
                    "statements": []
                  },
                  "functionSelector": "90cf581c",
                  "id": 492,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 489,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 488,
                        "name": "onlyJuryMember",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 216,
                        "src": "4376:14:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4376:14:2"
                    }
                  ],
                  "name": "voteYes",
                  "nameLocation": "4357:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 487,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4364:2:2"
                  },
                  "returnParameters": {
                    "id": 490,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4391:0:2"
                  },
                  "scope": 629,
                  "src": "4348:45:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 497,
                    "nodeType": "Block",
                    "src": "4441:2:2",
                    "statements": []
                  },
                  "functionSelector": "41c12a70",
                  "id": 498,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 495,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 494,
                        "name": "onlyJuryMember",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 216,
                        "src": "4426:14:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4426:14:2"
                    }
                  ],
                  "name": "voteNo",
                  "nameLocation": "4408:6:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 493,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4414:2:2"
                  },
                  "returnParameters": {
                    "id": 496,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4441:0:2"
                  },
                  "scope": 629,
                  "src": "4399:44:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    714
                  ],
                  "body": {
                    "id": 501,
                    "nodeType": "Block",
                    "src": "4481:2:2",
                    "statements": []
                  },
                  "functionSelector": "cafd73b8",
                  "id": 502,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setJuryType",
                  "nameLocation": "4458:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 499,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4469:2:2"
                  },
                  "returnParameters": {
                    "id": 500,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4481:0:2"
                  },
                  "scope": 629,
                  "src": "4449:34:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 519,
                    "nodeType": "Block",
                    "src": "4560:95:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 509,
                              "name": "juryPoolMembers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 168,
                              "src": "4570:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 511,
                            "indexExpression": {
                              "id": 510,
                              "name": "_newMember",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 504,
                              "src": "4586:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4570:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4600:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4570:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 514,
                        "nodeType": "ExpressionStatement",
                        "src": "4570:34:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 516,
                              "name": "_newMember",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 504,
                              "src": "4637:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 515,
                            "name": "NewJuryPoolMember",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 678,
                            "src": "4619:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4619:29:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 518,
                        "nodeType": "EmitStatement",
                        "src": "4614:34:2"
                      }
                    ]
                  },
                  "functionSelector": "c84663b0",
                  "id": 520,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 507,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 506,
                        "name": "onlyJuryMember",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 216,
                        "src": "4545:14:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4545:14:2"
                    }
                  ],
                  "name": "addJuryPoolMember",
                  "nameLocation": "4498:17:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 505,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 504,
                        "mutability": "mutable",
                        "name": "_newMember",
                        "nameLocation": "4524:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 520,
                        "src": "4516:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 503,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4516:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4515:20:2"
                  },
                  "returnParameters": {
                    "id": 508,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4560:0:2"
                  },
                  "scope": 629,
                  "src": "4489:166:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 587,
                    "nodeType": "Block",
                    "src": "4791:447:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 527,
                            "name": "juryPointer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "4854:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4869:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4854:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 530,
                        "nodeType": "ExpressionStatement",
                        "src": "4854:16:2"
                      },
                      {
                        "expression": {
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 531,
                              "name": "juryIsLive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 178,
                              "src": "4880:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 533,
                            "indexExpression": {
                              "id": 532,
                              "name": "juryPointer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 146,
                              "src": "4891:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4880:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4906:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4880:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 536,
                        "nodeType": "ExpressionStatement",
                        "src": "4880:30:2"
                      },
                      {
                        "expression": {
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 537,
                              "name": "juryIsLive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 178,
                              "src": "4920:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 541,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 538,
                                "name": "juryPointer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 146,
                                "src": "4931:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 539,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4945:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "4931:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4920:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4950:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "4920:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 544,
                        "nodeType": "ExpressionStatement",
                        "src": "4920:35:2"
                      },
                      {
                        "assignments": [
                          549
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 549,
                            "mutability": "mutable",
                            "name": "juryMembers",
                            "nameLocation": "4985:11:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 587,
                            "src": "4965:31:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_JuryMember_$642_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct IJury.JuryMember[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 547,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 546,
                                  "name": "JuryMember",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 642,
                                  "src": "4965:10:2"
                                },
                                "referencedDeclaration": 642,
                                "src": "4965:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JuryMember_$642_storage_ptr",
                                  "typeString": "struct IJury.JuryMember"
                                }
                              },
                              "id": 548,
                              "nodeType": "ArrayTypeName",
                              "src": "4965:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_JuryMember_$642_storage_$dyn_storage_ptr",
                                "typeString": "struct IJury.JuryMember[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 553,
                        "initialValue": {
                          "baseExpression": {
                            "id": 550,
                            "name": "juries",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 174,
                            "src": "4999:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_JuryMember_$642_storage_$dyn_storage_$",
                              "typeString": "mapping(uint256 => struct IJury.JuryMember storage ref[] storage ref)"
                            }
                          },
                          "id": 552,
                          "indexExpression": {
                            "id": 551,
                            "name": "juryPointer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "5006:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4999:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_JuryMember_$642_storage_$dyn_storage",
                            "typeString": "struct IJury.JuryMember storage ref[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4965:53:2"
                      },
                      {
                        "body": {
                          "id": 581,
                          "nodeType": "Block",
                          "src": "5078:109:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 565,
                                      "name": "juryMembers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 549,
                                      "src": "5092:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_JuryMember_$642_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct IJury.JuryMember memory[] memory"
                                      }
                                    },
                                    "id": 567,
                                    "indexExpression": {
                                      "id": 566,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 555,
                                      "src": "5104:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5092:14:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_JuryMember_$642_memory_ptr",
                                      "typeString": "struct IJury.JuryMember memory"
                                    }
                                  },
                                  "id": 568,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "memberAddr",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 633,
                                  "src": "5092:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 569,
                                    "name": "_juryMembers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 524,
                                    "src": "5120:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 571,
                                  "indexExpression": {
                                    "id": 570,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 555,
                                    "src": "5133:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5120:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "5092:43:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 573,
                              "nodeType": "ExpressionStatement",
                              "src": "5092:43:2"
                            },
                            {
                              "expression": {
                                "id": 579,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 574,
                                      "name": "juryMembers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 549,
                                      "src": "5149:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_JuryMember_$642_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct IJury.JuryMember memory[] memory"
                                      }
                                    },
                                    "id": 576,
                                    "indexExpression": {
                                      "id": 575,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 555,
                                      "src": "5161:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5149:14:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_JuryMember_$642_memory_ptr",
                                      "typeString": "struct IJury.JuryMember memory"
                                    }
                                  },
                                  "id": 577,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "vote",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 641,
                                  "src": "5149:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 578,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5171:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "5149:27:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 580,
                              "nodeType": "ExpressionStatement",
                              "src": "5149:27:2"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 558,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 555,
                            "src": "5048:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 559,
                              "name": "_juryMembers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 524,
                              "src": "5052:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5052:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5048:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 582,
                        "initializationExpression": {
                          "assignments": [
                            555
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 555,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "5041:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 582,
                              "src": "5033:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 554,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5033:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 557,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 556,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5045:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5033:13:2"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 563,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "5073:3:2",
                            "subExpression": {
                              "id": 562,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 555,
                              "src": "5073:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 564,
                          "nodeType": "ExpressionStatement",
                          "src": "5073:3:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "5028:159:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 584,
                              "name": "juryPointer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 146,
                              "src": "5219:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 583,
                            "name": "JuryDutyCompleted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 686,
                            "src": "5201:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5201:30:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 586,
                        "nodeType": "EmitStatement",
                        "src": "5196:35:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 521,
                    "nodeType": "StructuredDocumentation",
                    "src": "4661:64:2",
                    "text": " @dev lock up jury members to specific jury id"
                  },
                  "functionSelector": "8be3056f",
                  "id": 588,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "newLiveJury",
                  "nameLocation": "4739:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 525,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 524,
                        "mutability": "mutable",
                        "name": "_juryMembers",
                        "nameLocation": "4768:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 588,
                        "src": "4751:29:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 522,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4751:7:2",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 523,
                          "nodeType": "ArrayTypeName",
                          "src": "4751:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4750:31:2"
                  },
                  "returnParameters": {
                    "id": 526,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4791:0:2"
                  },
                  "scope": 629,
                  "src": "4730:508:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 619,
                    "nodeType": "Block",
                    "src": "5394:329:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 597,
                            "name": "disputeId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 148,
                            "src": "5404:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5417:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "5404:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 600,
                        "nodeType": "ExpressionStatement",
                        "src": "5404:14:2"
                      },
                      {
                        "expression": {
                          "id": 612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 601,
                              "name": "disputes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 159,
                              "src": "5428:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Dispute_$667_storage_$",
                                "typeString": "mapping(uint256 => struct IJury.Dispute storage ref)"
                              }
                            },
                            "id": 603,
                            "indexExpression": {
                              "id": 602,
                              "name": "disputeId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 148,
                              "src": "5437:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5428:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$667_storage",
                              "typeString": "struct IJury.Dispute storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 605,
                                "name": "juryPointer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 146,
                                "src": "5480:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 606,
                                "name": "disputeId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 148,
                                "src": "5516:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 607,
                                "name": "_deadline",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 594,
                                "src": "5549:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 608,
                                "name": "_plaintiff",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 590,
                                "src": "5583:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 609,
                                "name": "_defendent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 592,
                                "src": "5618:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "66616c7365",
                                "id": 610,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5651:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 604,
                              "name": "Dispute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 667,
                              "src": "5450:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Dispute_$667_storage_ptr_$",
                                "typeString": "type(struct IJury.Dispute storage pointer)"
                              }
                            },
                            "id": 611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "juryId",
                              "disputeId",
                              "deadline",
                              "plaintiff",
                              "defendent",
                              "verdict"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "5450:217:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$667_memory_ptr",
                              "typeString": "struct IJury.Dispute memory"
                            }
                          },
                          "src": "5428:239:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$667_storage",
                            "typeString": "struct IJury.Dispute storage ref"
                          }
                        },
                        "id": 613,
                        "nodeType": "ExpressionStatement",
                        "src": "5428:239:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 615,
                              "name": "disputeId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 148,
                              "src": "5693:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 616,
                              "name": "juryPointer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 146,
                              "src": "5704:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 614,
                            "name": "NewDispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 692,
                            "src": "5682:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5682:34:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 618,
                        "nodeType": "EmitStatement",
                        "src": "5677:39:2"
                      }
                    ]
                  },
                  "id": 620,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_newDispute",
                  "nameLocation": "5284:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 595,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 590,
                        "mutability": "mutable",
                        "name": "_plaintiff",
                        "nameLocation": "5313:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 620,
                        "src": "5305:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 589,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5305:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 592,
                        "mutability": "mutable",
                        "name": "_defendent",
                        "nameLocation": "5341:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 620,
                        "src": "5333:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 591,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5333:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 594,
                        "mutability": "mutable",
                        "name": "_deadline",
                        "nameLocation": "5369:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 620,
                        "src": "5361:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 593,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5361:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5295:89:2"
                  },
                  "returnParameters": {
                    "id": 596,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5394:0:2"
                  },
                  "scope": 629,
                  "src": "5275:448:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 623,
                    "nodeType": "Block",
                    "src": "5761:2:2",
                    "statements": []
                  },
                  "id": 624,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setVerdict",
                  "nameLocation": "5738:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 621,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5749:2:2"
                  },
                  "returnParameters": {
                    "id": 622,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5761:0:2"
                  },
                  "scope": 629,
                  "src": "5729:34:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 627,
                    "nodeType": "Block",
                    "src": "5811:2:2",
                    "statements": []
                  },
                  "id": 628,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_randomizeJuryMembers",
                  "nameLocation": "5778:21:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 625,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5799:2:2"
                  },
                  "returnParameters": {
                    "id": 626,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5811:0:2"
                  },
                  "scope": 629,
                  "src": "5769:44:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 630,
              "src": "185:5630:2",
              "usedErrors": []
            }
          ],
          "src": "32:5827:2"
        },
        "id": 2
      },
      "contracts/interfaces/IJury.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IJury.sol",
          "exportedSymbols": {
            "IJury": [
              715
            ]
          },
          "id": 716,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 631,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IJury",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 715,
              "linearizedBaseContracts": [
                715
              ],
              "name": "IJury",
              "nameLocation": "67:5:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "IJury.JuryMember",
                  "id": 642,
                  "members": [
                    {
                      "constant": false,
                      "id": 633,
                      "mutability": "mutable",
                      "name": "memberAddr",
                      "nameLocation": "115:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 642,
                      "src": "107:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 632,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "107:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 635,
                      "mutability": "mutable",
                      "name": "jurysParticipated",
                      "nameLocation": "143:17:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 642,
                      "src": "135:25:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 634,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "135:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 637,
                      "mutability": "mutable",
                      "name": "disputesApproved",
                      "nameLocation": "178:16:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 642,
                      "src": "170:24:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 636,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "170:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 639,
                      "mutability": "mutable",
                      "name": "disputesResolved",
                      "nameLocation": "212:16:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 642,
                      "src": "204:24:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 638,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "204:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 641,
                      "mutability": "mutable",
                      "name": "vote",
                      "nameLocation": "243:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 642,
                      "src": "238:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 640,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "238:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "JuryMember",
                  "nameLocation": "86:10:3",
                  "nodeType": "StructDefinition",
                  "scope": 715,
                  "src": "79:175:3",
                  "visibility": "public"
                },
                {
                  "canonicalName": "IJury.DisputeProposal",
                  "id": 654,
                  "members": [
                    {
                      "constant": false,
                      "id": 645,
                      "mutability": "mutable",
                      "name": "approvedJurors",
                      "nameLocation": "303:14:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "293:24:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 643,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "293:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 644,
                        "nodeType": "ArrayTypeName",
                        "src": "293:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 647,
                      "mutability": "mutable",
                      "name": "isApproved",
                      "nameLocation": "332:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "327:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 646,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "327:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 649,
                      "mutability": "mutable",
                      "name": "deadline",
                      "nameLocation": "360:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "352:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 648,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "352:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 651,
                      "mutability": "mutable",
                      "name": "plaintiff",
                      "nameLocation": "386:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "378:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 650,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "378:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 653,
                      "mutability": "mutable",
                      "name": "defendent",
                      "nameLocation": "413:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "405:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 652,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "405:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "DisputeProposal",
                  "nameLocation": "267:15:3",
                  "nodeType": "StructDefinition",
                  "scope": 715,
                  "src": "260:169:3",
                  "visibility": "public"
                },
                {
                  "canonicalName": "IJury.Dispute",
                  "id": 667,
                  "members": [
                    {
                      "constant": false,
                      "id": 656,
                      "mutability": "mutable",
                      "name": "juryId",
                      "nameLocation": "468:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 667,
                      "src": "460:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 655,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "460:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 658,
                      "mutability": "mutable",
                      "name": "disputeId",
                      "nameLocation": "492:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 667,
                      "src": "484:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 657,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "484:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 660,
                      "mutability": "mutable",
                      "name": "deadline",
                      "nameLocation": "519:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 667,
                      "src": "511:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 659,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "511:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 662,
                      "mutability": "mutable",
                      "name": "plaintiff",
                      "nameLocation": "545:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 667,
                      "src": "537:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 661,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "537:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 664,
                      "mutability": "mutable",
                      "name": "defendent",
                      "nameLocation": "572:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 667,
                      "src": "564:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 663,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "564:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 666,
                      "mutability": "mutable",
                      "name": "verdict",
                      "nameLocation": "596:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 667,
                      "src": "591:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 665,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "591:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Dispute",
                  "nameLocation": "442:7:3",
                  "nodeType": "StructDefinition",
                  "scope": 715,
                  "src": "435:175:3",
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 674,
                  "name": "NewLiveJury",
                  "nameLocation": "640:11:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 673,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 669,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "juryId",
                        "nameLocation": "660:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 674,
                        "src": "652:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 668,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "652:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 672,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "juryMemebers",
                        "nameLocation": "686:12:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 674,
                        "src": "668:30:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 670,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "668:7:3",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 671,
                          "nodeType": "ArrayTypeName",
                          "src": "668:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "651:48:3"
                  },
                  "src": "634:66:3"
                },
                {
                  "anonymous": false,
                  "id": 678,
                  "name": "NewJuryPoolMember",
                  "nameLocation": "711:17:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 677,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 676,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "juryMemeber",
                        "nameLocation": "737:11:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 678,
                        "src": "729:19:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 675,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "729:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "728:21:3"
                  },
                  "src": "705:45:3"
                },
                {
                  "anonymous": false,
                  "id": 682,
                  "name": "RemovedJuryMember",
                  "nameLocation": "761:17:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 681,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 680,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "juryMember",
                        "nameLocation": "787:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 682,
                        "src": "779:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 679,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "779:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "778:20:3"
                  },
                  "src": "755:44:3"
                },
                {
                  "anonymous": false,
                  "id": 686,
                  "name": "JuryDutyCompleted",
                  "nameLocation": "810:17:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 685,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 684,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "jurydId",
                        "nameLocation": "844:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 686,
                        "src": "828:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 683,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "828:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "827:25:3"
                  },
                  "src": "804:49:3"
                },
                {
                  "anonymous": false,
                  "id": 692,
                  "name": "NewDispute",
                  "nameLocation": "886:10:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 691,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 688,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "juryId",
                        "nameLocation": "905:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 692,
                        "src": "897:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 687,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "897:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 690,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "disputeId",
                        "nameLocation": "921:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 692,
                        "src": "913:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 689,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "913:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "896:35:3"
                  },
                  "src": "880:52:3"
                },
                {
                  "anonymous": false,
                  "id": 698,
                  "name": "DisputeDeadlinePostponed",
                  "nameLocation": "943:24:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 697,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 694,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "juryId",
                        "nameLocation": "976:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 698,
                        "src": "968:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 693,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "968:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 696,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newDeadline",
                        "nameLocation": "992:11:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 698,
                        "src": "984:19:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 695,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "984:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "967:37:3"
                  },
                  "src": "937:68:3"
                },
                {
                  "anonymous": false,
                  "id": 704,
                  "name": "DisputeResolved",
                  "nameLocation": "1016:15:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 703,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 700,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "verdict",
                        "nameLocation": "1037:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 704,
                        "src": "1032:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 699,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1032:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 702,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "juryId",
                        "nameLocation": "1054:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 704,
                        "src": "1046:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 701,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1046:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1031:30:3"
                  },
                  "src": "1010:52:3"
                },
                {
                  "anonymous": false,
                  "id": 710,
                  "name": "JuryMemberVoted",
                  "nameLocation": "1073:15:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 709,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 706,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "vote",
                        "nameLocation": "1094:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 710,
                        "src": "1089:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 705,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1089:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 708,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "juryMember",
                        "nameLocation": "1116:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 710,
                        "src": "1100:26:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 707,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1100:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1088:39:3"
                  },
                  "src": "1067:61:3"
                },
                {
                  "documentation": {
                    "id": 711,
                    "nodeType": "StructuredDocumentation",
                    "src": "1174:60:3",
                    "text": " @dev majority rules or unanimous decision"
                  },
                  "functionSelector": "cafd73b8",
                  "id": 714,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setJuryType",
                  "nameLocation": "1248:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 712,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:2:3"
                  },
                  "returnParameters": {
                    "id": 713,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1270:0:3"
                  },
                  "scope": 715,
                  "src": "1239:32:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 716,
              "src": "57:1578:3",
              "usedErrors": []
            }
          ],
          "src": "32:1604:3"
        },
        "id": 3
      }
    }
  }
}
